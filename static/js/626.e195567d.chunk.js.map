{"version":3,"file":"static/js/626.e195567d.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/module.js","views/components/Pagination.js","views/pages/Module.js","services/file.js","utils/UploadImage.js","views/pages/SubAdmin.js","services/bhagwan.js","services/kalyanak.js","services/jinalaya.js","views/pages/temple/Kalyanak.js","views/pages/Bhagwan.js","services/location.js","services/shala.js","views/pages/temple/Shala.js","utils/GoogleMapsModal.js","views/pages/temple/Jinalaya.js","views/pages/location/City.js","views/pages/location/District.js","views/pages/location/State.js","services/event.js","views/pages/Event.js","services/job.js","views/pages/jobPortal/Job.js","views/pages/jobPortal/JobSeeker.js","services/ecomm.js","views/pages/UserProfileModal.js","views/pages/User.js","views/pages/ecomm/SubCategory.js","views/pages/ecomm/Category.js","views/pages/ecomm/Attribute.js","views/pages/ecomm/ProductAttributes.js","views/pages/ecomm/Products.js","services/banner.js","views/pages/Banner.js","views/pages/ecomm/OrderDetail.js","views/pages/ecomm/Order.js","services/jainWorld.js","views/pages/jainWorld/Image.js","utils/UploadVideo.js","views/pages/jainWorld/Video.js","services/music.js","views/pages/music/SingerType.js","views/pages/music/SingerFile.js","views/pages/music/Singer.js","views/pages/music/SongCategory.js","utils/UploadAudio.js","views/pages/music/Song.js","views/pages/temple/Parshwanath108.js","services/setting.js","views/pages/Setting.js","views/layout/route.js","views/pages/user/Profile.js","views/pages/user/ChangePassword.js","views/layout/Menu.js","views/layout/Breadcrumb.js","views/pages/errors/Error404.js","views/layout/Top.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'module';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', {ids: id});\r\n    }\r\n\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/module';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Module() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Code',\r\n            dataIndex: 'code',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this module?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Modules</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{marginBottom: 0}}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{marginBottom: 0}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected modules?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setOpen(false);\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.title || ''), 'code');\r\n        }\r\n    }, [data.title])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Module'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange(e.target.value, 'title') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Code\" required>\r\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'code') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Checkbox, Tag, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/user';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\n\r\nexport default function SubAdmin() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'User Name',\r\n            dataIndex: 'userName',\r\n            width: 201,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Allowed Modules',\r\n            dataIndex: 'modules',\r\n            render: (modules) => modules?.map(v => {\r\n                    return <Tag key={v} style={{textTransform: 'uppercase'}}>{v}</Tag>\r\n                })\r\n            \r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this sub admin?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Sub admins</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected sub admins?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setOpen(false);\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'userName');\r\n        }\r\n    }, [data.name])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Sub Admin'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={400}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Modules\">\r\n                                    <Checkbox.Group\r\n                                        options={[{ label: 'Add', value: 'add' }, { label: 'Edit', value: 'edit' }, { label: 'Delete', value: 'delete' },]}\r\n                                        value={data.modules || []}\r\n                                        onChange={(v) => { handleChange(v, 'modules') }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"User Name\" required>\r\n                                    <Input placeholder=\"User Name\" value={data.userName} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'userName') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Password\" required={!data._id}>\r\n                                    <Input placeholder={!data._id ? \"Set Password\" : \"Change Password\"} value={data.password} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'password') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Phone\" required>\r\n                                    <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange(e.target.value, 'phone') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Email\" required>\r\n                                    <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange((e.target.value), 'email') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange(v, 'status') }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'bhagwan';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'kalyanak';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'jinalaya';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n    static detail108(id, data) {\r\n        return axios.get(this.baseURL + '/108/details/' + id, { params: data });\r\n    }\r\n    static list108(data) {\r\n        return axios.get(this.baseURL + '/108/list', { params: data });\r\n    }\r\n    static save108(data, query) {\r\n        return axios.post(this.baseURL + '/108/save', data, { params: query });\r\n    }\r\n    static delete108(id) {\r\n        return axios.post(this.baseURL + '/108/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/kalyanak';\r\nimport jinalayaService from '../../../services/jinalaya';\r\nimport bhagwanService from '../../../services/bhagwan';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Kalyanak({ bhagwanId = null, jinalayaId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, isPopulate: 1, bhagwanId, jinalayaId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 200,\r\n            render: (v) => (\r\n                v === 'chyavan'\r\n                    ? 'Chyavan'\r\n                    : v === 'janam'\r\n                        ? 'Janam'\r\n                        : v === 'diksha'\r\n                            ? 'Diksha'\r\n                            : v === 'kevalgyan'\r\n                                ? 'Kevalgyan'\r\n                                : v === 'nirvaan'\r\n                                    ? 'Nirvaan'\r\n                                    : ''\r\n            )\r\n        },\r\n        {\r\n            title: 'Bhagwan',\r\n            dataIndex: 'jinalayaDetails',\r\n            width: 200,\r\n            render: (v) => v?.bhagwanDetails?.name\r\n        },\r\n        {\r\n            title: 'Jinalaya',\r\n            dataIndex: 'jinalayaDetails',\r\n            width: 400,\r\n            render: (v) => v?.name\r\n        },\r\n        {\r\n            title: 'Tithi',\r\n            dataIndex: 'tithi',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Jaap',\r\n            dataIndex: 'jaap',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this kalyanak?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !bhagwanId && !jinalayaId\r\n                    ? <Typography.Title level={5}>List of Kalyanaks</Typography.Title>\r\n                    : null\r\n            }\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, bhagwanId, jinalayaId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }) {\r\n\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder=\"Name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e }))} allowClear>\r\n                            <Select.Option value={\"chyavan\"}>Chyavan</Select.Option>\r\n                            <Select.Option value={\"janam\"}>Janam</Select.Option>\r\n                            <Select.Option value={\"diksha\"}>Diksha</Select.Option>\r\n                            <Select.Option value={\"kevalgyan\"}>Kevalgyan</Select.Option>\r\n                            <Select.Option value={\"nirvaan\"}>Nirvaan</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Bhagwan\" value={qData.bhagwanId} onChange={v => { setQData({ ...qData, bhagwanId: v, jinalayaId: null }) }} allowClear disabled={bhagwanId} >\r\n                            {\r\n                                bhagwan.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Jinalaya\" value={qData.jinalayaId} onChange={v => { setQData({ ...qData, jinalayaId: v }) }} allowClear disabled={jinalayaId} >\r\n                            {\r\n                                jinalayas.filter(v => qData.bhagwanId ? v.bhagwanId === qData.bhagwanId : true).map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected kalyanaks?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, bhagwanId, jinalayaId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        jinalayaId,\r\n                    }\r\n            );\r\n            if (!dt&& addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Kalyanak'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList, bhagwanId, jinalayaId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, bhagwanId, jinalayaId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\r\n                                <Select.Option value={\"chyavan\"}>Chyavan</Select.Option>\r\n                                <Select.Option value={\"janam\"}>Janam</Select.Option>\r\n                                <Select.Option value={\"diksha\"}>Diksha</Select.Option>\r\n                                <Select.Option value={\"kevalgyan\"}>Kevalgyan</Select.Option>\r\n                                <Select.Option value={\"nirvaan\"}>Nirvaan</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} onChange={v => { handleChange({ jinalayaId: v }) }} disabled={jinalayaId}>\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Tithi\" required>\r\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jaap\" required>\r\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, bhagwanId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'hi', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\r\n                                <Select.Option value={\"chyavan\"}>च्यवन</Select.Option>\r\n                                <Select.Option value={\"janam\"}>जनम</Select.Option>\r\n                                <Select.Option value={\"diksha\"}>दीक्षा</Select.Option>\r\n                                <Select.Option value={\"kevalgyan\"}>केवलज्ञान</Select.Option>\r\n                                <Select.Option value={\"nirvaan\"}>निर्वाण</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Tithi\" required>\r\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jaap\" required>\r\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, bhagwanId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'gu', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Select value={data.name} onChange={v => { handleChange({ name: v }) }} >\r\n                                <Select.Option value={\"chyavan\"}>ચ્યવન</Select.Option>\r\n                                <Select.Option value={\"janam\"}>જનમ</Select.Option>\r\n                                <Select.Option value={\"diksha\"}>દીક્ષા</Select.Option>\r\n                                <Select.Option value={\"kevalgyan\"}>કેવલજ્ઞાન</Select.Option>\r\n                                <Select.Option value={\"nirvaan\"}>નિર્વાણ</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Tithi\" required>\r\n                            <Input placeholder=\"Tithi\" value={data.tithi} onChange={e => { handleChange({ tithi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jaap\" required>\r\n                            <Input.TextArea placeholder=\"Jaap\" value={data.jaap} onChange={e => { handleChange({ jaap: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Space, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/bhagwan';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\nimport Kalyanak from './temple/Kalyanak';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Bhagwan() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const kalyanakModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Kalyanak',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { kalyanakModalRef.current.openForm({ _id: value }) }} >Kalyanak</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this data?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Data</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <KalyanakModal ref={kalyanakModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        birth: {\r\n                            type: 'bc',\r\n                            bc: 100\r\n                        }\r\n                    }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ _id: res.data._id });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} destroyInactiveTabPane onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Birth\" required>\r\n                            <Space>\r\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type}\r\n                                    onChange={v => { handleChange({ 'birth.type': v, 'birth.ad': moment(), 'birth.bc': null }) }} >\r\n                                    <Select.Option value=\"bc\">BC</Select.Option>\r\n                                    <Select.Option value=\"ad\">AD</Select.Option>\r\n                                </Select>\r\n                                {\r\n                                    data?.birth?.type === 'bc'\r\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc}\r\n                                            onChange={e => { handleChange({ 'birth.bc': util.handleInteger(e.target.value) }) }} />\r\n                                        : <DatePicker\r\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)}\r\n                                            onChange={(v) => { handleChange({ 'birth.ad': v }) }} allowClear={false} />\r\n                                }\r\n                            </Space>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Birth\" required>\r\n                            <Space>\r\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type} disabled >\r\n                                    <Select.Option value=\"bc\">BC</Select.Option>\r\n                                    <Select.Option value=\"ad\">AD</Select.Option>\r\n                                </Select>\r\n                                {\r\n                                    data?.birth?.type === 'bc'\r\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc} disabled />\r\n                                        : <DatePicker\r\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)} disabled />\r\n                                }\r\n                            </Space>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Birth\" required>\r\n                            <Space>\r\n                                <Select style={{ width: \"80px\" }} value={data?.birth?.type} disabled >\r\n                                    <Select.Option value=\"bc\">BC</Select.Option>\r\n                                    <Select.Option value=\"ad\">AD</Select.Option>\r\n                                </Select>\r\n                                {\r\n                                    data?.birth?.type === 'bc'\r\n                                        ? <Input placeholder=\"Ex - 200\" value={data?.birth?.bc} disabled />\r\n                                        : <DatePicker\r\n                                            format={'DD MMM YYYY'} value={moment(data?.birth?.ad)} disabled />\r\n                                }\r\n                            </Space>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst KalyanakModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Kalyanak Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Kalyanak {...{ bhagwanId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'location';\r\n\r\n    static detailState(id, data) {\r\n        return axios.get(this.baseURL + '/state/details/' + id, { params: data });\r\n    }\r\n    static listState(data) {\r\n        return axios.get(this.baseURL + '/state/list', { params: data });\r\n    }\r\n    static saveState(data, query) {\r\n        return axios.post(this.baseURL + \"/state/save\", data, { params: query });\r\n    }\r\n    static deleteState(id) {\r\n        return axios.post(this.baseURL + '/state/delete', { ids: id });\r\n    }\r\n\r\n    static detailDistrict(id, data) {\r\n        return axios.get(this.baseURL + '/district/details/' + id, { params: data });\r\n    }\r\n    static listDistrict(data) {\r\n        return axios.get(this.baseURL + '/district/list', { params: data });\r\n    }\r\n    static saveDistrict(data, query) {\r\n        return axios.post(this.baseURL + \"/district/save\", data, { params: query });\r\n    }\r\n    static deleteDistrict(id) {\r\n        return axios.post(this.baseURL + '/district/delete', { ids: id });\r\n    }\r\n\r\n    static detailCity(id, data) {\r\n        return axios.get(this.baseURL + '/city/details/' + id, { params: data });\r\n    }\r\n    static listCity(data) {\r\n        return axios.get(this.baseURL + '/city/list', { params: data });\r\n    }\r\n    static saveCity(data, query) {\r\n        return axios.post(this.baseURL + \"/city/save\", data, { params: query });\r\n    }\r\n    static deleteCity(id) {\r\n        return axios.post(this.baseURL + '/city/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'shala';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Divider, Radio, TimePicker, Checkbox, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../../services/shala';\r\nimport jinalayaService from '../../../services/jinalaya';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Jinalaya from './Jinalaya';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Shala({ type, jinalayaId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, jinalayaId });\r\n    const addNewModalRef = useRef();\r\n    const jinalayaModelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Unique Code',\r\n            dataIndex: 'code',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Jinalaya',\r\n            dataIndex: 'jinalayaId',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { jinalayaModelRef.current.openForm({ _id: value }) }} >Jinalaya</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Labharthi',\r\n            dataIndex: 'labharthi',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this city?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, jinalayaId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Data</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, jinalayaId }} />\r\n            <JinalayaModel ref={jinalayaModelRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, jinalayaId }) {\r\n\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => { (setQData({ ...qData, key: e.target.value })) }} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Jinalaya\" value={qData.jinalayaId} onChange={v => { setQData({ ...qData, jinalayaId: v }) }} allowClear showSearch disabled={jinalayaId}>\r\n\r\n                            {\r\n                                jinalayas.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, type, jinalayaId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        type: type,\r\n                        jinalayaId,\r\n                        timing: { type: 'custom' },\r\n                        contactDetails: [{}],\r\n                        status: true,\r\n                        parkingFacilities: [\r\n                            {\r\n                                type: 'rickshaw',\r\n                                available: true,\r\n                                remarks: ''\r\n                            },\r\n                            {\r\n                                type: 'car',\r\n                                available: true,\r\n                                remarks: ''\r\n                            },\r\n                            {\r\n                                type: 'bus',\r\n                                available: true,\r\n                                remarks: ''\r\n                            }\r\n                        ],\r\n                        distanceFrom: [\r\n                            {\r\n                                type: 'busStop',\r\n                                available: true,\r\n                                remarks: []\r\n                            },\r\n                            {\r\n                                type: 'railway',\r\n                                available: true,\r\n                                remarks: []\r\n                            },\r\n                            {\r\n                                type: 'airport',\r\n                                available: true,\r\n                                remarks: []\r\n                            }\r\n                        ],\r\n                        restRoomFacility: [\r\n                            {\r\n                                type: 'male',\r\n                                bathroom: true,\r\n                                toilet: true,\r\n                                locker: true,\r\n                            },\r\n                            {\r\n                                type: 'female',\r\n                                bathroom: true,\r\n                                toilet: true,\r\n                                locker: true,\r\n                            }\r\n                        ],\r\n                        foundation: \"\",\r\n                        dharmShalaExt: {\r\n                            acRoom: 0,\r\n                            nonAcRoom: 0,\r\n                            acHall: 0,\r\n                            nonAcHall: 0,\r\n                            totalFloor: 0,\r\n                            liftFacilities: true\r\n                        },\r\n                        pathShalaExt: {\r\n                            totalStudents: 0\r\n                        },\r\n                        ayambiShalaExt: {\r\n                            facilities: [\r\n                                {\r\n                                    type: '12Months',\r\n                                    available: true,\r\n                                },\r\n                                {\r\n                                    type: '4Months',\r\n                                    available: true,\r\n                                },\r\n                                {\r\n                                    type: 'only2oli',\r\n                                    available: true,\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1400}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList, jinalayaId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList, jinalayaId }) => {\r\n\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photos\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} onChange={v => { handleChange({ jinalayaId: v }) }} disabled={jinalayaId} >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}></Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Labharthi\" required>\r\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} onChange={v => { handleChange({ prachinta: v }) }}>\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} onChange={e => { handleChange({ [`location.coordinates.0`]: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} onChange={e => { handleChange({ [`location.coordinates.1`]: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\">Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={4}>\r\n                                            <Form.Item label=\" \" >\r\n                                                {\r\n                                                    i !== 0\r\n                                                        ? <Button type=\"primary\" danger shape=\"circle\" icon={<MinusOutlined />} onClick={() => {\r\n                                                            handleChange({ contactDetails: [...data.contactDetails.filter((vv, ii) => ii !== i)] });\r\n                                                        }} />\r\n                                                        : null\r\n                                                }\r\n                                                {\r\n                                                    i + 1 === data.contactDetails?.length\r\n                                                        ? <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} onClick={() => {\r\n                                                            handleChange({ contactDetails: [...data.contactDetails, {}] });\r\n                                                        }} />\r\n                                                        : null\r\n                                                }\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    onChange={(e) => { handleChange({ 'timing.type': e.target.value, 'timing.custom': null, 'timing.allDay': null }); }}\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\"\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]}\r\n                                                    onChange={(v) => { handleChange({ [`timing.custom.morning`]: v }); }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Afternoon\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\"\r\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]}\r\n                                                    onChange={(v) => { handleChange({ [`timing.custom.afternoon`]: v }); }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\"\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]}\r\n                                                    onChange={(v) => { handleChange({ [`timing.custom.evening`]: v }); }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\"\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]}\r\n                                                onChange={(v) => { handleChange({ [`timing.allDay`]: v }); }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available}\r\n                                        onChange={e => {\r\n                                            handleChange({\r\n                                                [`parkingFacilities.${i}.available`]: e.target.checked,\r\n                                            });\r\n                                        }}>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    {\r\n                                        <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n                                    }\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.bathroom`]: e.target.checked,\r\n                                                });\r\n                                            }}>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.toilet`]: e.target.checked,\r\n                                                });\r\n                                            }}>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.locker`]: e.target.checked,\r\n                                                });\r\n                                            }}>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available}\r\n                                        onChange={e => {\r\n                                            handleChange({\r\n                                                [`distanceFrom.${i}.available`]: e.target.checked,\r\n                                            });\r\n                                        }}>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Nearest Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} onChange={e => { handleChange({ [`upashray.available`]: e.target.checked }); }}>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} onChange={e => { handleChange({ [`upashray.value`]: util.handleInteger(e.target.value) }); }} />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.type === 'dharmShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data.dharmShalaExt?.acRoom}\r\n                                            onChange={e => { handleChange({ 'dharmShalaExt.acRoom': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data.dharmShalaExt?.nonAcRoom}\r\n                                            onChange={e => { handleChange({ 'dharmShalaExt.nonAcRoom': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data.dharmShalaExt?.acHall}\r\n                                            onChange={e => { handleChange({ 'dharmShalaExt.acHall': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data.dharmShalaExt?.nonAcHall}\r\n                                            onChange={e => { handleChange({ 'dharmShalaExt.nonAcHall': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Total Floor\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data?.dharmShalaExt?.totalFloor}\r\n                                            onChange={e => { handleChange({ 'dharmShalaExt.totalFloor': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Lift Facilities Availability \">\r\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\r\n                                            onChange={e => {\r\n                                                handleChange({\r\n                                                    [`dharmShalaExt.liftFacilities`]: e.target.checked,\r\n                                                });\r\n                                            }}>\r\n                                            Lift Facilities\r\n                                        </Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'pathShala'\r\n                            ? <>\r\n                                <Col span={24}></Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Number of students\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.pathShalaExt?.totalStudents}\r\n                                            onChange={e => { handleChange({ 'pathShalaExt.totalStudents': util.handleInteger(e.target.value) }); }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={24}></Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'ayambiShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\r\n                                </Col>\r\n                                {\r\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\r\n                                        <Col span={8} key={i}>\r\n                                            <Form.Item label={\r\n                                                <Checkbox checked={v?.available}\r\n                                                    onChange={e => {\r\n                                                        handleChange({\r\n                                                            [`ayambiShalaExt.facilities.${i}.available`]: e.target.checked,\r\n                                                        });\r\n                                                    }}>\r\n                                                    {\r\n                                                        v?.type === '12Months'\r\n                                                            ? '12 Months'\r\n                                                            : v?.type === '4Months'\r\n                                                                ? '4 Months'\r\n                                                                : v?.type === 'only2oli'\r\n                                                                    ? 'Only 2 Oli'\r\n                                                                    : null\r\n                                                    }\r\n                                                </Checkbox>}>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    ))\r\n                                }\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"History\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'hi' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photos\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}></Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Labharthi\" required>\r\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} onChange={v => { handleChange({ prachinta: v }) }} disabled >\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    disabled\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Afternoon\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    {\r\n                                        +data?.parkingFacilities?.[i]?.available\r\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n                                            : null\r\n                                    }\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\r\n                    </Col>\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Neares Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    {\r\n                        data.type === 'dharmShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.acRoom}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.nonAcRoom}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.acHall}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.nonAcHall}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Total Floor\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data?.dharmShalaExt?.totalFloor}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Lift Facilities Availability \">\r\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\r\n                                            disabled>\r\n                                            Lift Facilities\r\n                                        </Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'pathShala'\r\n                            ? <>\r\n                                <Col span={24}></Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Number of students\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.pathShalaExt?.totalStudents}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={24}></Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'ayambiShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\r\n                                </Col>\r\n                                {\r\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\r\n                                        <Col span={8} key={i}>\r\n                                            <Form.Item label={\r\n                                                <Checkbox checked={v?.available} disabled>\r\n                                                    {\r\n                                                        v?.type === '12Months'\r\n                                                            ? '12 Months'\r\n                                                            : v?.type === '4Months'\r\n                                                                ? '4 Months'\r\n                                                                : v?.type === 'only2oli'\r\n                                                                    ? 'Only 2 Oli'\r\n                                                                    : null\r\n                                                    }\r\n                                                </Checkbox>}>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    ))\r\n                                }\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'gu' }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photos\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}></Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Labharthi\" required>\r\n                            <Input placeholder=\"Labharthi\" value={data.labharthi} onChange={e => { handleChange({ labharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} onChange={v => { handleChange({ prachinta: v }) }} disabled >\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    disabled\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Afternoon\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.afternoon && [moment(data?.timing?.custom?.afternoon?.[0]), moment(data?.timing?.custom?.afternoon?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    {\r\n                                        +data?.parkingFacilities?.[i]?.available\r\n                                            ? <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n                                            : null\r\n                                    }\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From</Typography.Text></Divider>\r\n                    </Col>\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Neares Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.type === 'dharmShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rooms and Halls</Typography.Text></Divider>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.acRoom}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Room\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.nonAcRoom}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.acHall}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Non Ac Hall\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.dharmShalaExt?.nonAcHall}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Total Floor\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\"\r\n                                            value={data?.dharmShalaExt?.totalFloor}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Lift Facilities Availability \">\r\n                                        <Checkbox checked={data?.dharmShalaExt?.liftFacilities}\r\n                                            disabled>\r\n                                            Lift Facilities\r\n                                        </Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'pathShala'\r\n                            ? <>\r\n                                <Col span={24}></Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Number of students\">\r\n                                        <Input type=\"text\" placeholder=\"Ex - 4\" rows={10}\r\n                                            value={data.pathShalaExt?.totalStudents}\r\n                                            disabled\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={24}></Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n                    {\r\n                        data.type === 'ayambiShala'\r\n                            ? <>\r\n                                <Col span={24}>\r\n                                    <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Ayambi Facilities</Typography.Text></Divider>\r\n                                </Col>\r\n                                {\r\n                                    data?.ayambiShalaExt?.facilities?.map((v, i) => (\r\n                                        <Col span={8} key={i}>\r\n                                            <Form.Item label={\r\n                                                <Checkbox checked={v?.available} disabled>\r\n                                                    {\r\n                                                        v?.type === '12Months'\r\n                                                            ? '12 Months'\r\n                                                            : v?.type === '4Months'\r\n                                                                ? '4 Months'\r\n                                                                : v?.type === 'only2oli'\r\n                                                                    ? 'Only 2 Oli'\r\n                                                                    : null\r\n                                                    }\r\n                                                </Checkbox>}>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    ))\r\n                                }\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst JinalayaModel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Jinalaya Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Jinalaya jinalayaId={data._id} />\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import React, { useEffect, useState } from 'react'\r\nimport { useJsApiLoader, GoogleMap } from \"@react-google-maps/api\"\r\nconst GoogleMapsModal = (props) => {\r\n    const [lat, setLat] = useState(props.lat || 28.698997);\r\n    const [lng, setLng] = useState(props.lng || 77.138420);\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\r\n    })\r\n\r\n    const handlePos = (e) => {\r\n        setLat(e.latLng.lat());\r\n        setLng(e.latLng.lng());\r\n    }\r\n\r\n    useEffect(() => {\r\n        props?.onChange({ lat, lng })\r\n    }, [lat, lng])\r\n    if (!isLoaded) {\r\n        return <h1>Loading Maps.....</h1>\r\n    }\r\n    return (\r\n        <div style={{ paddingBottom: \"1rem\" }}>\r\n            <GoogleMap center={{ lat, lng }} zoom={15} mapContainerStyle={{ width: \"100%\", height: \"500px\" }} onClick={e => handlePos(e)}>\r\n            </GoogleMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleMapsModal","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Divider, Radio, TimePicker, Checkbox, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../../services/jinalaya';\r\nimport locationService from '../../../services/location';\r\nimport bhagwanService from '../../../services/bhagwan';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Shala from './Shala';\r\nimport Kalyanak from './Kalyanak';\r\nimport GoogleMapsModal from '../../../utils/GoogleMapsModal';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Jinalaya({ jinalayaId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, jinalayaId });\r\n    const addNewModalRef = useRef();\r\n    const shalaModalRef = useRef();\r\n    const kalyanakModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Shalas',\r\n            dataIndex: '_id',\r\n            width: 450,\r\n            render: value => (\r\n                <>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Button type=\"primary\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'dharmShala', _id: value }) }} >Dharm Shala</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button type=\"dashed\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'bhojanShala', _id: value }) }} >Bhojan Shala</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button type=\"danger\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'pathShala', _id: value }) }} >Path Shala</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button type=\"default\" size=\"small\" onClick={() => { shalaModalRef.current.openForm({ type: 'ayambiShala', _id: value }) }} >Ayambi Shala</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Kalyanak',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { kalyanakModalRef.current.openForm({ _id: value }) }} >Kalyanak</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Unique Code',\r\n            dataIndex: 'code',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Parshvanath',\r\n            dataIndex: 'isParshvanath',\r\n            width: 100,\r\n            render: v => {\r\n                if (v) {\r\n                    return <Tag color='green'>Yes</Tag>\r\n                } else {\r\n                    return <Tag color='red'>No</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: '24 T. Jinalaya',\r\n            dataIndex: 'is24TirthankarJinalaya',\r\n            width: 120,\r\n            render: v => {\r\n                if (v) {\r\n                    return <Tag color='green'>Yes</Tag>\r\n                } else {\r\n                    return <Tag color='red'>No</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this city?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => jinalayaId ? null : <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {jinalayaId ? null : <Typography.Title level={5}>List of Jinalayas</Typography.Title>}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ShalaModal ref={shalaModalRef} />\r\n            <KalyanakModal ref={kalyanakModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    // const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            // locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Mulnayak\" value={qData.bhagwanId} onChange={v => { setQData({ ...qData, bhagwanId: v }) }} allowClear >\r\n                            {\r\n                                bhagwan.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"State\" value={qData.stateId} onChange={v => { setQData({ ...qData, stateId: v, districtId: null }) }} allowClear >\r\n                            {\r\n                                states.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"District\" value={qData.districtId} onChange={v => { setQData({ ...qData, districtId: v }) }} allowClear >\r\n                            {\r\n                                districts.filter(v => v.stateId === qData.stateId).map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected jinalayas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        timing: { type: 'custom' },\r\n                        contactDetails: [{}],\r\n                        status: true,\r\n                        parkingFacilities: [\r\n                            {\r\n                                type: 'rickshaw',\r\n                                available: true,\r\n                                remarks: ''\r\n                            },\r\n                            {\r\n                                type: 'car',\r\n                                available: true,\r\n                                remarks: ''\r\n                            },\r\n                            {\r\n                                type: 'bus',\r\n                                available: true,\r\n                                remarks: ''\r\n                            }\r\n                        ],\r\n                        distanceFrom: [\r\n                            {\r\n                                type: 'busStop',\r\n                                available: true,\r\n                                remarks: []\r\n                            },\r\n                            {\r\n                                type: 'railway',\r\n                                available: true,\r\n                                remarks: []\r\n                            },\r\n                            {\r\n                                type: 'airport',\r\n                                available: true,\r\n                                remarks: []\r\n                            }\r\n                        ],\r\n                        restRoomFacility: [\r\n                            {\r\n                                type: 'male',\r\n                                bathroom: true,\r\n                                toilet: true,\r\n                                locker: true,\r\n                            },\r\n                            {\r\n                                type: 'female',\r\n                                bathroom: true,\r\n                                toilet: true,\r\n                                locker: true,\r\n                            }\r\n                        ],\r\n                        foundation: \"\"\r\n                    }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1400}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const googleMapModalRef = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            bhagwanService.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <GoogleModal ref={googleMapModalRef} lat={data?.location?.coordinates[0]} lng={data?.location?.coordinates[1]} handleChange={handleChange} />\r\n\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Mulnayak\" required>\r\n                            <Select value={data.bhagwanId} onChange={v => { handleChange({ bhagwanId: v }) }} >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pratisthacharya Name\" required>\r\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\r\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} onChange={v => { handleChange({ prachinta: v }) }} >\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.isParshvanath} onChange={e => { handleChange({ isParshvanath: e.target.checked }) }}>108 Parshwanath</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.is24TirthankarJinalaya} onChange={e => { handleChange({ is24TirthankarJinalaya: e.target.checked }) }}>24 Tirthankar Jinalaya</Checkbox>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pin Code\" required>\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} onChange={e => { handleChange({ pincode: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} onChange={e => { handleChange({ [`location.coordinates.0`]: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} onChange={e => { handleChange({ [`location.coordinates.1`]: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\" onClick={() => { googleMapModalRef.current.openForm(\"d\") }}>Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={4}>\r\n                                            <Form.Item label=\" \" >\r\n                                                {\r\n                                                    i !== 0\r\n                                                        ? <Button type=\"primary\" danger shape=\"circle\" icon={<MinusOutlined />} onClick={() => {\r\n                                                            handleChange({ contactDetails: [...data.contactDetails.filter((vv, ii) => ii !== i)] });\r\n                                                        }} />\r\n                                                        : null\r\n                                                }\r\n                                                {\r\n                                                    i + 1 === data.contactDetails?.length\r\n                                                        ? <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} onClick={() => {\r\n                                                            handleChange({ contactDetails: [...data.contactDetails, {}] });\r\n                                                        }} />\r\n                                                        : null\r\n                                                }\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    onChange={(e) => { handleChange({ 'timing.type': e.target.value, 'timing.custom': null, 'timing.allDay': null }); }}\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\"\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]}\r\n                                                    onChange={(v) => { handleChange({ [`timing.custom.morning`]: v }); }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\"\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]}\r\n                                                    onChange={(v) => { handleChange({ [`timing.custom.evening`]: v }); }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\"\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]}\r\n                                                onChange={(v) => { handleChange({ [`timing.allDay`]: v }); }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available}\r\n                                        onChange={e => {\r\n                                            handleChange({\r\n                                                [`parkingFacilities.${i}.available`]: e.target.checked,\r\n                                            });\r\n                                        }}>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    {\r\n                                        <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n                                    }\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.bathroom`]: e.target.checked,\r\n                                                });\r\n                                            }}>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.toilet`]: e.target.checked,\r\n                                                });\r\n                                            }}>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} onChange={e => {\r\n                                                handleChange({\r\n                                                    [`restRoomFacility.${i}.locker`]: e.target.checked,\r\n                                                });\r\n                                            }}>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\r\n                    </Col>\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available}\r\n                                        onChange={e => {\r\n                                            handleChange({\r\n                                                [`distanceFrom.${i}.available`]: e.target.checked,\r\n                                            });\r\n                                        }}>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Neares Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} onChange={e => { handleChange({ [`upashray.available`]: e.target.checked }); }}>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} onChange={e => { handleChange({ [`upashray.value`]: util.handleInteger(e.target.value) }); }} />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            bhagwanService.list({ isAll: 1, ln: 'hi' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\r\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Mulnayak\" required>\r\n                            <Select value={data.bhagwanId} disabled >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pratisthacharya Name\" required>\r\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\r\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} disabled>\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.isParshvanath} disabled>108 Parshwanath</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.is24TirthankarJinalaya} disabled>24 Tirthankar Jinalaya</Checkbox>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pin Code\" required>\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    disabled\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\r\n                    </Col>\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Neares Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            bhagwanService.list({ isAll: 1, ln: 'gu' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan data not loaded', 'error'); });\r\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={50} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Basic Details</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Foundation Date\" required>\r\n                            <Input placeholder=\"Foundation Date\" value={data?.foundation} onChange={e => { handleChange({ foundation: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Mulnayak\" required>\r\n                            <Select value={data.bhagwanId} disabled >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pratisthacharya Name\" required>\r\n                            <Input placeholder=\"Pratisthacharya Name\" value={data.pratisthacharya} onChange={e => { handleChange({ pratisthacharya: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Dhwaja Labharthi\" required>\r\n                            <Input placeholder=\"Dhwaja Labharthi\" value={data.dhwajaLabharthi} onChange={e => { handleChange({ dhwajaLabharthi: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Prachinta\" required>\r\n                            <Select value={data.prachinta} disabled >\r\n                                <Select.Option value=\"1-100\">1-100</Select.Option>\r\n                                <Select.Option value=\"101-500\">101-500</Select.Option>\r\n                                <Select.Option value=\"501-2500\">501-2500</Select.Option>\r\n                                <Select.Option value=\"2500-above\">2500-above</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Included In</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.isParshvanath} disabled>108 Parshwanath</Checkbox>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Checkbox checked={data.is24TirthankarJinalaya} disabled>24 Tirthankar Jinalaya</Checkbox>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Address</Typography.Text></Divider>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Pin Code\" required>\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} rows={3} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Latitude\" required>\r\n                                    <Input placeholder=\"Latitude\" value={data?.location?.coordinates?.[0]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Longitude\" required>\r\n                                    <Input placeholder=\"Longitude\" value={data?.location?.coordinates?.[1]} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Button className=\"w-100\" type=\"primary\" disabled>Set Location</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Divider orientation=\"left\" plain={true}></Divider>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Contact Details</Typography.Text></Divider>\r\n                            </Col>\r\n                            {\r\n                                data.contactDetails?.map((v, i) => (\r\n                                    <React.Fragment key={i}>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Name\" required>\r\n                                                <Input placeholder=\"Name\" value={v.name} onChange={e => { handleChange({ [`contactDetails.${i}.name`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={10}>\r\n                                            <Form.Item label=\"Number\" required>\r\n                                                <Input placeholder=\"Number\" value={v.number} onChange={e => { handleChange({ [`contactDetails.${i}.number`]: e.target.value }) }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}></Col>\r\n                                    </React.Fragment>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"center\" }}>\r\n                        <Divider type=\"vertical\" style={{ height: \"100%\" }}></Divider>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[12, 8]}>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Jinalaya Timing</Typography.Text></Divider>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Radio.Group\r\n                                    options={[{ label: \"Custom\", value: 'custom' }, { label: \"All Day\", value: \"allDay\" }]}\r\n                                    optionType=\"button\"\r\n                                    buttonStyle=\"solid\"\r\n                                    value={data.timing?.type}\r\n                                    disabled\r\n                                />\r\n                            </Col>\r\n                            <Col span={24}></Col>\r\n                            {\r\n                                data.timing?.type === 'custom'\r\n                                    ? <>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Morning\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.morning && [moment(data?.timing?.custom?.morning?.[0]), moment(data?.timing?.custom?.morning?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Evening\" required>\r\n                                                <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                    value={data?.timing?.custom?.evening && [moment(data?.timing?.custom?.evening?.[0]), moment(data?.timing?.custom?.evening?.[1])]} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                    : <Col span={24}>\r\n                                        <Form.Item label=\"Choose\" required>\r\n                                            <TimePicker.RangePicker className=\"w-100\" disabled\r\n                                                value={data?.timing?.allDay && [moment(data?.timing?.allDay?.[0]), moment(data?.timing?.allDay?.[1])]} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Parking Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {\r\n                        data.parkingFacilities?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.parkingFacilities?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.parkingFacilities?.[i]?.type === 'rickshaw'\r\n                                                ? 'Rickshaw'\r\n                                                : data?.parkingFacilities?.[i]?.type === 'car'\r\n                                                    ? 'Car'\r\n                                                    : data?.parkingFacilities?.[i]?.type === 'bus'\r\n                                                        ? 'Bus'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Input type=\"text\" placeholder=\"Remarks\" value={data?.parkingFacilities?.[i]?.remarks} onChange={e => { handleChange({ [`parkingFacilities.${i}.remarks`]: e.target.value }) }} />\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Rest Room Facilities</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    {\r\n                        data.restRoomFacility?.map((v, i) => (\r\n                            <Col span={24} key={i}>\r\n                                <Card size=\"small\">\r\n                                    <Row gutter={[12, 2]}>\r\n                                        <Col span={6}>{v.type === 'male' ? 'Male' : v.type === 'female' ? 'Female' : null}</Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.bathroom} disabled>Bathroom</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.toilet} disabled>Toilet</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Checkbox checked={v.locker} disabled>Bus</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Distance From Temple</Typography.Text></Divider>\r\n                    </Col>\r\n                    {\r\n                        data.distanceFrom?.map((v, i) => (\r\n                            <Col span={8} key={i}>\r\n                                <Form.Item label={\r\n                                    <Checkbox checked={data?.distanceFrom?.[i]?.available} disabled>\r\n                                        {\r\n                                            data?.distanceFrom?.[i]?.type === 'busStop'\r\n                                                ? 'Main Busstop'\r\n                                                : data?.distanceFrom?.[i]?.type === 'railway'\r\n                                                    ? 'Main Railway Station'\r\n                                                    : data?.distanceFrom?.[i]?.type === 'airport'\r\n                                                        ? 'Neares Airport'\r\n                                                        : null\r\n                                        }\r\n                                    </Checkbox>}>\r\n                                    <Select mode=\"tags\" value={data?.distanceFrom?.[i]?.remarks} placeholder=\"Type address and press enter\" onChange={v => { handleChange({ [`distanceFrom.${i}.remarks`]: v }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}></Divider>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label={<Checkbox checked={data.upashray?.available} disabled>Upashray</Checkbox>}>\r\n                            {\r\n                                data.upashray?.available\r\n                                    ? <Input type=\"text\" placeholder=\"Number\" value={data.upashray.value} disabled />\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"left\" plain={true}><Typography.Text type=\"danger\">Others Details</Typography.Text></Divider>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"History\">\r\n                            <Input.TextArea type=\"text\" placeholder=\"Remarks\" rows={10}\r\n                                value={data.historyDetails}\r\n                                onChange={e => { handleChange({ historyDetails: e.target.value }); }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ShalaModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Shala Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Shala {...{ type: data.type, jinalayaId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst KalyanakModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Kalyanak Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Kalyanak {...{ jinalayaId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\nconst GoogleModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n        }\r\n    }));\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{ top: 20, height: \"100%\" }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <GoogleMapsModal setLat={props.setLat} setLng={props.setLng} lat={props.lat} lng={props.lng} onChange={({ lat, lng }) => props.handleChange({ [`location.coordinates.1`]: lng, [`location.coordinates.0`]: lat })} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/location';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function City({ stateId = null, districtId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, stateId, districtId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this city?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listCity(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteCity(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Cities</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected cities?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [rowData, setRowData] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (v) => {\r\n        if (changeForm) {\r\n            setData({ ...data, ...v });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setRowData(dt ? { ...dt } : { status: true });\r\n            if (!dt?._id && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt._id && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailCity(rowData._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveCity(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ _id: res.data._id });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                    setRowData({ ...rowData, _id: res.data._id });\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\r\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); } }, [rowData]);\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({});\r\n            setRowData({});\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' City'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); setRowData({}); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            service.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null }) }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v }) }} >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            service.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            service.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/location';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport City from './City';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function District({ stateId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, stateId });\r\n    const addNewModalRef = useRef();\r\n    const cityModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Cities',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { cityModalRef.current.openForm(row) }} >Cities</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this district?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listDistrict(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteDistrict(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Districts</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, stateId }} />\r\n            <CityModal ref={cityModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected districts?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, stateId = null } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [rowData, setRowData] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (v, k) => { !changeForm || setData({ ...data, [k]: v }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setRowData(dt ? { ...dt } : {});\r\n            if (!dt?._id && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt._id && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailDistrict(rowData._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveDistrict(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange(res.data._id, '_id');\r\n                if (ln === \"en\") {\r\n                    list();\r\n                    setRowData({ ...rowData, _id: res.data._id });\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\r\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); setData({ stateId }) } }, [rowData]);\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({});\r\n            setRowData({});\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' District'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); setRowData({}); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange(v, 'stateId') }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled>\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst CityModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All cities of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={900}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <City {...{ districtId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/location';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport District from './District';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function State() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const districtModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Districts',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { districtModalRef.current.openForm(row) }} >Districts</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this state?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listState(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteState(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of States</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <DistrictModal ref={districtModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected states?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [rowData, setRowData] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (v, k) => { !changeForm || setData({ ...data, [k]: v }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setRowData(dt ? { ...dt } : { status: true });\r\n            if (!dt?._id && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt._id && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailState(rowData._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveState(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange(res.data._id, '_id');\r\n                if (ln === \"en\") {\r\n                    list();\r\n                    setRowData({ ...rowData, _id: res.data._id });\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => { if (rowData._id) { getDetails(); } }, [ln]);\r\n    useEffect(() => { if (rowData._id) { getDetails(); } else { setLn('en'); } }, [rowData]);\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({});\r\n            setRowData({});\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' State'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); setRowData({}); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} destroyInactiveTabPane onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !rowData._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, 'name') }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst DistrictModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All districts of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <District {...{ stateId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'event';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag, DatePicker } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/event';\r\nimport locationService from '../../services/location';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Event() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'State',\r\n            dataIndex: 'stateDetails',\r\n            width: 200,\r\n            render: v => v?.name\r\n        },\r\n        {\r\n            title: 'District',\r\n            dataIndex: 'districtDetails',\r\n            width: 200,\r\n            render: v => v?.name\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this city?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Events</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    // const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            // locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"State\" value={qData.stateId} onChange={v => { setQData({ ...qData, stateId: v, districtId: null }) }} allowClear >\r\n                            {\r\n                                states.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"District\" value={qData.districtId} onChange={v => { setQData({ ...qData, districtId: v }) }} allowClear >\r\n                            {\r\n                                districts.filter(v => v.stateId === qData.stateId).map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected events?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        status: true,\r\n                        startDate: moment(),\r\n                        endDate: moment(),\r\n                    }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Event'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\" required>\r\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Start Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\r\n                                onChange={(v) => { handleChange({ startDate: v }) }} allowClear={false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"End Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\r\n                                onChange={(v) => { handleChange({ endDate: v }) }} allowClear={false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Pin Code\">\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} onChange={e => { handleChange({ pincode: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Address\">\r\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\" required>\r\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Start Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\r\n                                disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"End Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\r\n                                disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Pin Code\">\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Address\">\r\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\" required>\r\n                            <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Start Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.startDate)}\r\n                                disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"End Date\" required>\r\n                            <DatePicker\r\n                                className=\"w-100\"\r\n                                format={'DD MMM YYYY'} value={moment(data?.endDate)}\r\n                                disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"District\" required>\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"City\" required>\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Pin Code\">\r\n                            <Input placeholder=\"Pin Code\" value={data.pincode} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Address\">\r\n                            <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'job';\r\n\r\n    static detailJobSeeker(id, data) {\r\n        return axios.get(this.baseURL + '/seeker/details/' + id, { params: data });\r\n    }\r\n    static listJobSeeker(data) {\r\n        return axios.get(this.baseURL + '/seeker/list', { params: data });\r\n    }\r\n    static saveJobSeeker(data, query) {\r\n        return axios.post(this.baseURL + \"/seeker/save\", data, { params: query });\r\n    }\r\n    static deleteJobSeeker(id) {\r\n        return axios.post(this.baseURL + '/seeker/delete', { ids: id });\r\n    }\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Checkbox, Tag, Radio, Divider } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/job';\r\nimport locationService from '../../../services/location';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Job() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Company Name',\r\n            dataIndex: 'companyName',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Age Limit',\r\n            dataIndex: 'ageLimit',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Opening',\r\n            dataIndex: 'openingCount',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Experience',\r\n            dataIndex: 'experience',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Open</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Closed</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this Job?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listJob(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Jobs</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by job name / company name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected jobs?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailJob(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveJob(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Job'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Company Name\" required>\r\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age Limit\" required>\r\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Opening Count\" required>\r\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender Required\" required>\r\n                            <Radio.Group onChange={(e) => { handleChange({ requiredGender: e.target.value }) }} value={data.requiredGender} >\r\n                                <Radio value={'male'}>Male</Radio>\r\n                                <Radio value={'female'}>Female</Radio>\r\n                                <Radio value={'both'}>Both</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Staying & Food\" required>\r\n                            <Checkbox checked={data.staying} onChange={e => { handleChange({ staying: e.target.checked }) }}>Staying </Checkbox>\r\n                            <Checkbox checked={data.food} onChange={e => { handleChange({ food: e.target.checked }) }}>Food</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact\" required>\r\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Job Address\">\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Open</Select.Option>\r\n                                <Select.Option value={false}>Closed</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Company Name\" required>\r\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age Limit\" required>\r\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Opening Count\" required>\r\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender Required\" required>\r\n                            <Radio.Group value={data.requiredGender} disabled>\r\n                                <Radio value={'male'}>Male</Radio>\r\n                                <Radio value={'female'}>Female</Radio>\r\n                                <Radio value={'both'}>Both</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Staying & Food\" required>\r\n                            <Checkbox checked={data.staying} disabled>Staying </Checkbox>\r\n                            <Checkbox checked={data.food} disabled>Food</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact\" required>\r\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Job Address\">\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Open</Select.Option>\r\n                                <Select.Option value={false}>Closed</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Company Name\" required>\r\n                            <Input placeholder=\"Company Name\" value={data.companyName} onChange={e => { handleChange({ companyName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age Limit\" required>\r\n                            <Input placeholder=\"Age Limit\" value={data.ageLimit} onChange={e => { handleChange({ ageLimit: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Opening Count\" required>\r\n                            <Input placeholder=\"Opening Count\" value={data.openingCount} onChange={e => { handleChange({ openingCount: util.handleInteger(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender Required\" required>\r\n                            <Radio.Group value={data.requiredGender} disabled>\r\n                                <Radio value={'male'}>Male</Radio>\r\n                                <Radio value={'female'}>Female</Radio>\r\n                                <Radio value={'both'}>Both</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Staying & Food\" required>\r\n                            <Checkbox checked={data.staying} disabled>Staying </Checkbox>\r\n                            <Checkbox checked={data.food} disabled>Food</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact\" required>\r\n                            <Input placeholder=\"Contact\" value={data.contacts} onChange={e => { handleChange({ contacts: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Job Address\">\r\n                            <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Open</Select.Option>\r\n                                <Select.Option value={false}>Closed</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Checkbox, Tag, Divider } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/job';\r\nimport locationService from '../../../services/location';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function JobSeekers() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'parentName',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Contact Number',\r\n            dataIndex: 'contacts',\r\n            width: 120,\r\n        },\r\n        {\r\n            title: 'Experience',\r\n            dataIndex: 'experience',\r\n            width: 250,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 150,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Looking for a job</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Not looking for a job</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this job seeker?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listJobSeeker(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJobSeeker(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Job Seekers</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by seeker name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected job seekers?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailJobSeeker(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveJobSeeker(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Job Seeker'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'en' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'en' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'en' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Seeker Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Parent Name\">\r\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age\" required>\r\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender\" required>\r\n                            <Select value={data.gender} onChange={v => { handleChange({ gender: v }) }} >\r\n                                <Select.Option value={'male'}>Male</Select.Option>\r\n                                <Select.Option value={'female'}>Female</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact Number\" required>\r\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: (e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Relocation\" required>\r\n                            <Checkbox checked={data.forOtherState} onChange={e => { handleChange({ forOtherState: e.target.checked }) }}>Available for other state</Checkbox>\r\n                            <Checkbox checked={data.forOtherDistrict} onChange={e => { handleChange({ forOtherDistrict: e.target.checked }) }}>Available for other district</Checkbox>\r\n                            <Checkbox checked={data.forOtherCity} onChange={e => { handleChange({ forOtherCity: e.target.checked }) }}>Available for other city</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} onChange={v => { handleChange({ stateId: v, districtId: null, cityId: null }) }} >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} onChange={v => { handleChange({ districtId: v, cityId: null }) }} >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} onChange={v => { handleChange({ cityId: v }) }} >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Looking for a job</Select.Option>\r\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'hi' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'hi' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'hi' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Seeker Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Parent Name\">\r\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age\" required>\r\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender\" required>\r\n                            <Select value={data.gender} disabled >\r\n                                <Select.Option value={'male'}>Male</Select.Option>\r\n                                <Select.Option value={'female'}>Female</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact Number\" required>\r\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: util.handleInteger(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Relocation\" required>\r\n                            <Checkbox checked={data.forOtherState} disabled>Available for other state</Checkbox>\r\n                            <Checkbox checked={data.forOtherDistrict} disabled>Available for other district</Checkbox>\r\n                            <Checkbox checked={data.forOtherCity} disabled>Available for other city</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Looking for a job</Select.Option>\r\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    const [states, setStates] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            locationService.listState({ isAll: 1, ln: 'gu' }).then(res => { setStates(res.data || []); }).catch(err => { AntdMsg('States not loaded', 'error'); });\r\n            locationService.listDistrict({ isAll: 1, ln: 'gu' }).then(res => { setDistricts(res.data || []); }).catch(err => { AntdMsg('Districts not loaded', 'error'); });\r\n            locationService.listCity({ isAll: 1, ln: 'gu' }).then(res => { setCities(res.data || []); }).catch(err => { AntdMsg('Cities not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Job Seeker Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Parent Name\">\r\n                            <Input placeholder=\"Parent Name\" value={data.parentName} onChange={e => { handleChange({ parentName: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Age\" required>\r\n                            <Input placeholder=\"Age\" value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Gender\" required>\r\n                            <Select value={data.gender} disabled >\r\n                                <Select.Option value={'male'}>Male</Select.Option>\r\n                                <Select.Option value={'female'}>Female</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Contact Number\" required>\r\n                            <Input placeholder=\"+91 1100223300\" value={data.contacts} onChange={e => { handleChange({ contacts: util.handleInteger(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Relocation\" required>\r\n                            <Checkbox checked={data.forOtherState} disabled>Available for other state</Checkbox>\r\n                            <Checkbox checked={data.forOtherDistrict} disabled>Available for other district</Checkbox>\r\n                            <Checkbox checked={data.forOtherCity} disabled>Available for other city</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Experience\" required>\r\n                            <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Description\">\r\n                            <Input.TextArea placeholder=\"Enter some description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider></Divider>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"State\" required>\r\n                            <Select value={data.stateId} disabled >\r\n                                {\r\n                                    states.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"District\">\r\n                            <Select value={data.districtId} disabled >\r\n                                {\r\n                                    districts.filter(v => v.stateId === data.stateId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"City\">\r\n                            <Select value={data.cityId} disabled >\r\n                                {\r\n                                    cities.filter(v => v.districtId === data.districtId).map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Looking for a job</Select.Option>\r\n                                <Select.Option value={false}>Not looking for a job</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecomm';\r\n    // category : \r\n    static detailCategory(id, data) {\r\n        return axios.get(this.baseURL + '/category/details/' + id, { params: data });\r\n    }\r\n    static listCategory(data) {\r\n        return axios.get(this.baseURL + '/category/list', { params: data });\r\n    }\r\n    static saveCategory(data, query) {\r\n        return axios.post(this.baseURL + \"/category/save\", data, { params: query });\r\n    }\r\n    static deleteCategory(id) {\r\n        return axios.post(this.baseURL + '/category/delete', { ids: id });\r\n    }\r\n\r\n    // for sub category\r\n    static detailSubCategory(id, data) {\r\n        return axios.get(this.baseURL + '/subcategory/details/' + id, { params: data });\r\n    }\r\n    static listSubCategory(data) {\r\n        return axios.get(this.baseURL + '/subcategory/list', { params: data });\r\n    }\r\n    static saveSubCategory(data, query) {\r\n        return axios.post(this.baseURL + \"/subcategory/save\", data, { params: query });\r\n    }\r\n    static deleteSubCategory(id) {\r\n        return axios.post(this.baseURL + '/subcategory/delete', { ids: id });\r\n    }\r\n\r\n    // for attribute\r\n    static detailAttribute(id, data) {\r\n        return axios.get(this.baseURL + '/attribute/details/' + id, { params: data });\r\n    }\r\n    static listAttribute(data) {\r\n        return axios.get(this.baseURL + '/attribute/list', { params: data });\r\n    }\r\n    static saveAttribute(data, query) {\r\n        return axios.post(this.baseURL + \"/attribute/save\", data, { params: query });\r\n    }\r\n    static deleteAttribute(id) {\r\n        return axios.post(this.baseURL + '/attribute/delete', { ids: id });\r\n    }\r\n\r\n\r\n    // for Product : \r\n    static detailProduct(id, data) {\r\n        return axios.get(this.baseURL + '/product/details/' + id, { params: data });\r\n    }\r\n    static listProduct(data) {\r\n        return axios.get(this.baseURL + '/product/list', { params: data });\r\n    }\r\n    static saveProduct(data, query) {\r\n        return axios.post(this.baseURL + \"/product/save\", data, { params: query });\r\n    }\r\n    static deleteProduct(id) {\r\n        return axios.post(this.baseURL + '/product/delete', { ids: id });\r\n    }\r\n\r\n    // for Product Attribute : \r\n    static detailProductAttribute(id, data) {\r\n        return axios.get(this.baseURL + '/productAttribute/details/' + id, { params: data });\r\n    }\r\n    static listProductAttribute(data) {\r\n        return axios.get(this.baseURL + '/productAttribute/list', { params: data });\r\n    }\r\n    static saveProductAttribute(data, query) {\r\n        return axios.post(this.baseURL + \"/productAttribute/save\", data, { params: query });\r\n    }\r\n    static deleteProductAttribute(id) {\r\n        return axios.post(this.baseURL + '/productAttribute/delete', { ids: id });\r\n    }\r\n    static listCart(data) {\r\n        return axios.get(this.baseURL + '/cart/list', { params: data });\r\n    }\r\n    static saveCart(data, query) {\r\n        return axios.post(this.baseURL + \"/cart/save\", data, { params: query });\r\n    }\r\n\r\n    // for Orders : \r\n    static orderDetails(id, data) {\r\n        return axios.get(this.baseURL + '/order/details/' + id, { params: data });\r\n    }\r\n    static orderList(data) {\r\n        return axios.get(this.baseURL + '/order/list', { params: data });\r\n    }\r\n    static orderSave(data, query) {\r\n        return axios.post(this.baseURL + \"/order/save\", data, { params: query });\r\n    }\r\n    static orderDelete(id) {\r\n        return axios.post(this.baseURL + '/order/delete', { ids: id });\r\n    }\r\n\r\n    // for Orders : \r\n    static orderDetailDetails(id, data) {\r\n        return axios.get(this.baseURL + '/orderDetail/details/' + id, { params: data });\r\n    }\r\n    static orderDetailList(data) {\r\n        return axios.get(this.baseURL + '/orderDetail/list', { params: data });\r\n    }\r\n    static orderDetailSave(data, query) {\r\n        return axios.post(this.baseURL + \"/orderDetail/save\", data, { params: query });\r\n    }\r\n    static orderDetailDelete(id) {\r\n        return axios.post(this.baseURL + '/orderDetail/delete', { ids: id });\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n// import commonObj from '../../commonObj';\r\nimport service from \"../../services/ecomm\"\r\n\r\nconst viewAccess = true;\r\n// const addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\n// const editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\n// const deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function UserProfileModal({ type, userId = null }) {\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [orderData, setOrderData] = useState([])\r\n    const [cartData, setCartData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, userId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Product Id',\r\n            dataIndex: 'productId',\r\n            width: 180,\r\n\r\n\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n            width: 250,\r\n            render: (_, { productDetails }) => {\r\n                return <span>{productDetails?.name}</span>\r\n            }\r\n        },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'quantity',\r\n            width: 50,\r\n        },\r\n        // {\r\n        //     title: 'Action',\r\n        //     dataIndex: '_id',\r\n        //     width: 70,\r\n        //     hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n        //     render: (v, row) => {\r\n        //         return <>\r\n        //             {\r\n        //                 deleteAccess\r\n        //                     ? <Popconfirm\r\n        //                         title=\"Are you sure to delete this product attribute?\"\r\n        //                         onConfirm={() => { deleteData(row._id); }}\r\n        //                         okText=\"Yes\"\r\n        //                         cancelText=\"No\"\r\n        //                     >\r\n        //                         <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n        //                     </Popconfirm>\r\n        //                     : null\r\n        //             }\r\n        //             {\r\n        //                 editAccess\r\n        //                     ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n        //                     : null\r\n        //             }\r\n        //             {\r\n        //                 !editAccess && viewAccess\r\n        //                     ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n        //                     : null\r\n        //             }\r\n        //         </>\r\n        //     }\r\n        // },\r\n    ].filter(item => !item.hidden);\r\n\r\n\r\n    const columnOrder = [\r\n        {\r\n            title: 'Order id',\r\n            dataIndex: '_id',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Shipping Address',\r\n            dataIndex: 'shippingAddress',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Payment Method',\r\n            dataIndex: 'paymentMethod',\r\n            width: 180,\r\n        },\r\n        {\r\n            title: 'Total Amount',\r\n            dataIndex: 'totalAmount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: (_, { status }) => {\r\n                return <Tag color='green'>{status}</Tag>\r\n            },\r\n        },\r\n        // {\r\n        //     title: 'Action',\r\n        //     dataIndex: '_id',\r\n        //     width: 70,\r\n        //     hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n        //     render: (v, row) => {\r\n        //         return <>\r\n        //             {\r\n        //                 deleteAccess\r\n        //                     ? <Popconfirm\r\n        //                         title=\"Are you sure to delete this Product?\"\r\n        //                         onConfirm={() => { deleteData(row._id); }}\r\n        //                         okText=\"Yes\"\r\n        //                         cancelText=\"No\"\r\n        //                     >\r\n        //                         <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n        //                     </Popconfirm>\r\n        //                     : null\r\n        //             }\r\n        //             {\r\n        //                 editAccess\r\n        //                     ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n        //                     : null\r\n        //             }\r\n        //             {\r\n        //                 !editAccess && viewAccess\r\n        //                     ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n        //                     : null\r\n        //             }\r\n        //         </>\r\n        //     }\r\n        // },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function listOrder() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.orderList(qData).then(res => {\r\n                setOrderData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n\r\n    }\r\n    function listCartData() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listCart({ userId: qData.userId }).then(res => {\r\n                setCartData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n\r\n    }\r\n    const deleteData = (id) => {\r\n        service.orderDetailDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            // list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    const orderTableColoumns = columnOrder.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    orderTableColoumns[0].fixed = true;\r\n    orderTableColoumns[orderTableColoumns.length - 1].fixed = 'right';\r\n\r\n    const cartTableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData }} title=\"Cart\" />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    const orderTableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData }} title=\"Order\" />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        listOrder();\r\n        listCartData();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={16}>\r\n                    <div>\r\n                        <Table\r\n                            {...cartTableProps}\r\n                            pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                            columns={tableColumns}\r\n                            dataSource={cartData.length ? cartData : []}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Table\r\n                            {...orderTableProps}\r\n                            pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                            columns={orderTableColoumns}\r\n                            dataSource={orderData.length ? orderData : []}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <div>\r\n                        <div className='profile-card'>\r\n                            <div className='user-wrapper'>\r\n                                <img src=\"https://www.w3schools.com/w3css/img_avatar3.png\" alt=\"profile\" />\r\n                                <div className='user-meta-details'>\r\n                                    <h3>username</h3>\r\n                                    <hr />\r\n                                    <span >wallet balance : <span>1500</span></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='button-wrapper'>\r\n                                <Button type=\"primary\" size=\"large\" style={{ width: \"220px\" }}>\r\n                                    Subscribed\r\n                                </Button>\r\n                                <Button type=\"ghost\" size=\"large\" style={{ width: \"220px\" }}>\r\n                                    Wallet history\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, title }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={3}>\r\n                    <p style={{ fontSize: \"1.3rem\", width: \"150px\" }}>{title} details</p>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected product attributes ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tag, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/user';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport UserProfile from './UserProfileModal';\r\n\r\nexport default function User() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const userProfileModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'firstName',\r\n            render: (value, row) => {\r\n                return (value ?? '') + \" \" + (row.lastName ?? '');\r\n            },\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Profile',\r\n            dataIndex: '_id',\r\n            width: 150,\r\n            render: (value, row) => (\r\n                <Button type=\"primary\" size=\"small\" onClick={() => { userProfileModalRef.current.openForm({ _id: row._id }) }}>User Details</Button>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this user?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <UserProfileModal ref={userProfileModalRef}/>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected users?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n            if (dt && dt.avatar) {\r\n                setFileList([{ ...dt.avatar }]);\r\n            } else {\r\n                setFileList([]);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setOpen(false);\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'userName');\r\n        }\r\n    }, [data.name])\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"First Name\" required>\r\n                                            <Input placeholder=\"First Name\" value={data.firstName} onChange={e => { handleChange(e.target.value, 'firstName') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Last Name\" required>\r\n                                            <Input placeholder=\"Last Name\" value={data.lastName} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), 'lastName') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange(e.target.value, 'phone') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange((e.target.value), 'email') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Address\" required>\r\n                                    <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange((e.target.value), 'address') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange(v, 'status') }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\nconst UserProfileModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>User<Typography.Text type=\"danger\"> Profile</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <UserProfile {...{ type: data.type, userId: data._id }}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function SubCategory({ type, categoryId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this sub category?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listSubCategory(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteSubCategory(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !categoryId\r\n                    ? <Typography.Title level={5}>List of Sub Categories</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Category\" value={qData.categoryId} onChange={v => { setQData({ ...qData, categoryId: v }) }} allowClear disabled={categoryId} >\r\n                            {\r\n                                categories.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected sub categories?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, categoryId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true, categoryId }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailSubCategory(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveSubCategory(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFile([]);\r\n\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: file?.[0] });\r\n    }, [file]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Sub Category'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId, file, setFile }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, categoryId, file, setFile }) => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name])\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Category\" required>\r\n                            <Select value={data.categoryId} onChange={v => { handleChange({ categoryId: v })}} disabled={categoryId} >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, file, setFile }) => {\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'hi' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Select value={data.categoryId} disabled >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} disabled >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, file, setFile }) => {\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'gu' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Select value={data.categoryId} disabled >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} disabled>\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport Subcategory from './SubCategory';\r\nimport util from '../../../utils/util';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Category() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const subCategoryModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Sub Category',\r\n            dataIndex: '_id',\r\n            width: 150,\r\n            render: (value, row) => (\r\n                <Button type=\"primary\" size=\"small\" onClick={() => { subCategoryModalRef.current.openForm({ name: row.name, _id: value }) }} >Sub Category</Button>\r\n            )\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this category?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listCategory(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteCategory(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Categories</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <SubCategoryModal ref={subCategoryModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected categories?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailCategory(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveCategory(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFile([]);\r\n\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: file?.[0] });\r\n    }, [file]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Category'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, file, setFile }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, file, setFile }) => {\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, file, setFile }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} disabled >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, file, setFile }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={18}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} disabled/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} disabled >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst SubCategoryModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All sub categories of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Subcategory {...{ type: data.type, categoryId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Attribute({ type, categoryId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Unique Code',\r\n            dataIndex: 'code',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this attributes?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listAttribute(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteAttribute(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !categoryId\r\n                    ? <Typography.Title level={5}>List of Profiles</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, categoryId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true, categoryId }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailAttribute(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveAttribute(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, categoryId }) => {\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ code: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} onChange={e => { handleChange({ code: util.removeSpecialChars(e.target.value) }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Unique Code\" required>\r\n                            <Input placeholder=\"Unique Code\" value={data.code} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Tabs, Card, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Products({ type, productId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, productId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            render: (_, { attributeDetails }) => (\r\n                <span>{attributeDetails.name}</span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Value',\r\n            dataIndex: 'value',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this product attribute?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listProductAttribute(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteProductAttribute(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                // scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, productId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Reload</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected product attributes ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailProductAttribute(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveProductAttribute(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Product Attribute'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n    const [attributes, setAttributes] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listAttribute({ isAll: 1, ln: 'en' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Attribute\" required>\r\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\r\n                                {\r\n                                    attributes.map(v => <Select.Option value={v._id} key={v._id} label={v.name}>{v.name}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Value\" required>\r\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n    const [attributes, setAttributes] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listAttribute({ isAll: 1, ln: 'hi' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Attribute\" required>\r\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\r\n                                {\r\n                                    attributes.map(v => <Select.Option value={v.parentId} key={v.parentId} label={v.name}>{v.name}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Value\" required>\r\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n    const [attributes, setAttributes] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listAttribute({ isAll: 1, ln: 'gu' }).then(res => { setAttributes(res.data || []); }).catch(err => { AntdMsg('Attribute data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Attribute\" required>\r\n                            <Select value={data.attributeId} onChange={v => { handleChange({ attributeId: v }) }} >\r\n                                {\r\n                                    attributes.map(v => <Select.Option value={v.parentId} key={v.parentId} label={v.name}>{v.name}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Value\" required>\r\n                            <Input placeholder=\"Value\" value={data.value} onChange={e => { handleChange({ value: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport util from '../../../utils/util';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport ProductAttribute from './ProductAttributes';\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Products({ type, categoryId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const addNewModalRef = useRef();\r\n    const attributeModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 220,\r\n        },\r\n        {\r\n            title: 'Attributes',\r\n            dataIndex: '_id',\r\n            width: 150,\r\n            render: (value, row) => (\r\n                <Button type=\"primary\" size=\"small\" onClick={() => { attributeModalRef.current.openForm({ name: row.name, _id: value }) }}>Attributes</Button>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this Product?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listProduct(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteProduct(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !categoryId\r\n                    ? <Typography.Title level={5}>List of  Products</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\r\n            <AttributeModal ref={attributeModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }) {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Category\" value={qData.categoryId} onChange={v => { setQData({ ...qData, categoryId: v }) }} allowClear disabled={categoryId} >\r\n                            {\r\n                                categories.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Product?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, categoryId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true, categoryId }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailProduct(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data?.imgUrls || []);\r\n            setThumbFile(res.data?.thumbImgUrl ? [res.data?.thumbImgUrl] : []);\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveProduct(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFile([]);\r\n            setThumbFile([]);\r\n\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: file });\r\n        handleChange({ imgUrl: thumbFile?.[0] });\r\n    }, [file, thumbFile]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, categoryId, file, setFile, thumbFile, setThumbFile }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, file, setFile, thumbFile, setThumbFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, file, setFile, thumbFile, setThumbFile }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, categoryId, file, setFile, thumbFile, setThumbFile }) => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n            service.listSubCategory({ isAll: 1, ln: 'en' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name])\r\n\r\n    useEffect(() => {\r\n        if (subCategories.length) {\r\n            let filterdData = subCategories?.filter(item => data?.categoryIds?.includes(item.categoryId) && data.subCategoryIds?.includes(item._id));\r\n            handleChange({ subCategoryIds: filterdData.map(v => v._id) || [] })\r\n        }\r\n    }, [data.categoryIds || subCategories]);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={3}>\r\n                        <Form.Item label=\"Thumbnail Photo\">\r\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Categories\"\r\n                                onChange={v => { handleChange({ categoryIds: v }) }}\r\n                                value={data.categoryIds}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {categories.map((v) => <Select.Option key={v._id} value={v._id} label={v.name}>{v.name}</Select.Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Sub Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Sub Categories\"\r\n                                onChange={v => { handleChange({ subCategoryIds: v }) }}\r\n                                value={data.subCategoryIds}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {\r\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) => <Select.Option key={v._id} value={v._id} label={v.name}>{v.name}</Select.Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Name\" required>\r\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Slug\" required>\r\n                                <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Price\" required>\r\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Actual Price\" required>\r\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"HSN code\" required>\r\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} onChange={e => { handleChange({ hsn_code: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Inventory\" required>\r\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Title\" required>\r\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Tag\" required>\r\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Meta Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Status\" required>\r\n                                <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                    <Select.Option value={true}>Active</Select.Option>\r\n                                    <Select.Option value={false}>Inactive</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, file, setFile, thumbFile, setThumbFile }) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'hi' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n            service.listSubCategory({ isAll: 1, ln: 'hi' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={3}>\r\n                        <Form.Item label=\"Thumbnail Photo\">\r\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Categories\"\r\n                                disabled\r\n                                value={data.categoryIds || []}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {categories.map((v) => <Select.Option key={v.parentId} value={v.parentId} label={v.name} >{v.name}</Select.Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Sub Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Sub Categories\"\r\n                                disabled\r\n                                value={data.subCategoryIds}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {\r\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) =>\r\n                                        <Select.Option key={v.parentId} value={v.parentId} label={v.name}>{v.name}</Select.Option>\r\n                                    )\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Name\" required>\r\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Slug\" required>\r\n                                <Input placeholder=\"Slug\" value={data.slug} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Price\" required>\r\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Actual Price\" required>\r\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"HSN code\" required>\r\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Inventory\" required>\r\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Title\" required>\r\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Tag\" required>\r\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Meta Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Status\" required>\r\n                                <Select value={data.status} disabled >\r\n                                    <Select.Option value={true}>Active</Select.Option>\r\n                                    <Select.Option value={false}>Inactive</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, file, setFile, thumbFile, setThumbFile }) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listCategory({ isAll: 1, ln: 'gu' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Categories data not loaded', 'error'); });\r\n            service.listSubCategory({ isAll: 1, ln: 'gu' }).then(res => { setSubCategories(res.data || []); }).catch(err => { AntdMsg('Sub categories data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={3}>\r\n                        <Form.Item label=\"Thumbnail Photo\">\r\n                            <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={21}>\r\n                        <Form.Item label=\"Photo\">\r\n                            <UploadImage {...{ fileList: file, setFileList: setFile }} count={10} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Categories\"\r\n                                disabled\r\n                                value={data.categoryIds || []}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {categories.map((v) => <Select.Option key={v.parentId} value={v.parentId} label={v.name} >{v.name}</Select.Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Choose Sub Categories\" required>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Select Sub Categories\"\r\n                                disabled\r\n                                value={data.subCategoryIds}\r\n                                optionLabelProp=\"label\"\r\n                                allowClear={true}\r\n                            >\r\n                                {\r\n                                    subCategories.filter(v => data?.categoryIds?.includes(v.categoryId)).map((v) =>\r\n                                        <Select.Option key={v.parentId} value={v.parentId} label={v.name}>{v.name}</Select.Option>\r\n                                    )\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Name\" required>\r\n                                <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Slug\" required>\r\n                                <Input placeholder=\"Slug\" value={data.slug} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product description...\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Price\" required>\r\n                                <Input type=\"text\" placeholder=\"500\" value={data.price} onChange={e => { handleChange({ price: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Actual Price\" required>\r\n                                <Input type=\"text\" placeholder=\"450\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"HSN code\" required>\r\n                                <Input placeholder=\"HSN code\" value={data.hsn_code} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Inventory\" required>\r\n                                <Input type=\"text\" placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Title\" required>\r\n                                <Input placeholder=\"Enter meta title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Meta Tag\" required>\r\n                                <Input placeholder=\"Enter meta tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Form.Item label=\"Meta Description\" required>\r\n                                <Input.TextArea placeholder=\"Write product meta description...\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Status\" required>\r\n                                <Select value={data.status} disabled >\r\n                                    <Select.Option value={true}>Active</Select.Option>\r\n                                    <Select.Option value={false}>Inactive</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst AttributeModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Attributes of <Typography.Text type=\"danger\">{data.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={800}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <ProductAttribute {...{ type: data.type, productId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\n// import userService from '../../../services/user';\r\n// import ecommService from '../../../services/ecomm';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function BannerImage() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrl',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 400,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 80,\r\n            render: (_,row) => {\r\n                return(<span>{row.type}</span>)\r\n            }\r\n            \r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.bannerList(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (viewAccess) {\r\n    //         userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.bannerSave(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Priority\">\r\n                                    <Input placeholder='Priority' value={data.priority} onChange={e => { handleChange({ priority: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"Home\">Home</Select.Option>\r\n                                        <Select.Option value=\"Ecomm\">Ecomm</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function OrderDetails({ type, orderId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, orderId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Product Id',\r\n            dataIndex: 'productId',\r\n            width: 180,\r\n\r\n\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n            width: 250,\r\n            render: (_, { ProductDetails }) => {\r\n                return <span>{ProductDetails.name}</span>\r\n            }\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            width: 140,\r\n            render: (_, { price }) => {\r\n                return <span>₹{price}</span>\r\n            }\r\n        },\r\n        {\r\n            title: 'Actual price',\r\n            dataIndex: 'actualPrice',\r\n            width: 140,\r\n            render: (_, { actualPrice }) => {\r\n                return <span>₹{actualPrice}</span>\r\n            }\r\n        },\r\n        // {\r\n        //     title: 'Discount',\r\n        //     dataIndex: 'discount',\r\n        //     width: 140,\r\n        //     render : (_,{discount})=>{\r\n        //         return <span>{discount}%</span>\r\n        //     }\r\n        // },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'quantity',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this product attribute?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.orderDetailList(qData.orderId).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.orderDetailDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n            // scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, orderId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Reload</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected product attributes ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, orderId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { orderId }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.orderDetailDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.orderDetailSave(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Order'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={900}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Id\" required>\r\n                                    <Input placeholder=\"Value\" value={data?._id} disabled/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Name\" required>\r\n                                    <Input placeholder=\"Value\" value={data?.productId?.name} disabled/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input type=\"number\" placeholder=\"Price\" value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Actual Price\" required>\r\n                                    <Input type=\"number\" placeholder=\"Actual price\" value={data.actualPrice} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Quantity\" required>\r\n                                    <Input type=\"number\" placeholder=\"Quantity\" value={data.quantity} onChange={e => { handleChange({ quantity: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Total \" required>\r\n                                    <Input type=\"number\" placeholder=\"Total\" value={data.total} onChange={e => { handleChange({ total: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/ecomm';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport OrderDetail from './OrderDetail';\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Order({ type, categoryId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const addNewModalRef = useRef();\r\n    const attributeModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Order id',\r\n            dataIndex: '_id',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Shipping Address',\r\n            dataIndex: 'shippingAddress',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Payment Method',\r\n            dataIndex: 'paymentMethod',\r\n            width: 180,\r\n        },\r\n        {\r\n            title: 'Total Amount',\r\n            dataIndex: 'totalAmount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Details',\r\n            dataIndex: 'orderId',\r\n            width: 150,\r\n            render: (value, row) => (\r\n                <Button type=\"primary\" size=\"small\" onClick={() => { attributeModalRef.current.openForm({ _id: row._id }) }}>Order Details</Button>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: (_,{status}) => {\r\n                return <Tag color='green'>{status}</Tag>\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this Product?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.orderList(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.orderDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, categoryId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !categoryId\r\n                    ? <Typography.Title level={5}>List of  Orders</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, categoryId }} />\r\n            <AttributeModal ref={attributeModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by order id\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Order?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.orderDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.orderSave(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Order'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Order Id\">\r\n                                    <Input placeholder='OrderId' value={data._id} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Shipping Address\">\r\n                                    <Input placeholder='Shipping Address' value={data.shippingAddress} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Payment method\">\r\n                                    <Input placeholder='Payment method' value={data.paymentMethod} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Total Amount\">\r\n                                    <Input type=\"number\" placeholder='order Amount' value={data.totalAmount} onChange={v => { handleChange({ totalAmount: v.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value=\"Initiated\">Initiated</Select.Option>\r\n                                        <Select.Option value=\"Dispatched\">Dispatched</Select.Option>\r\n                                        <Select.Option value=\"Delivered\">Delivered</Select.Option>\r\n                                        <Select.Option value=\"Cancelled\">Cancelled</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst AttributeModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Details of Order: <Typography.Text type=\"danger\">{data._id}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={800}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <OrderDetail {...{ type: data.type, orderId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'jain-world';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../../services/jainWorld';\r\nimport userService from '../../../services/user';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function MyImage() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const [users, setUsers] = useState([]);\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'fileUrl',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 400,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this image?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Jinalayas</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, users }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    {/* {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    } */}\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, users } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id ).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.fileUrl ? [res.data?.fileUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ fileUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={300}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"User\">\r\n                                    <Select value={data.userId} onChange={v => { handleChange({ 'userId': v }) }} >\r\n                                        {\r\n                                            users.map(v => (\r\n                                                <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                            ))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, disabled = false }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    return <Upload\r\n        accept=\"video/*\"\r\n        customRequest={uploadImage}\r\n        onChange={handleOnChange}\r\n        onRemove={handleRemove}\r\n        // listType=\"picture-card\"\r\n        fileList={fileList}\r\n        className=\"image-upload-grid\"\r\n        disabled={disabled}\r\n    >\r\n        {fileList?.length >= count ? null :     <Button icon={<UploadOutlined />}>Upload</Button>}\r\n    </Upload>\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../../services/jainWorld';\r\nimport userService from '../../../services/user';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport UploadVideo from '../../../utils/UploadVideo';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function MyVideo() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'video' });\r\n    const [users, setUsers] = useState([]);\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'fileUrl',\r\n            render: (v) => {\r\n                return (\r\n                    <>\r\n                        <video height=\"80\" controls>\r\n                            <source src={v?.url} type=\"video/mp4\" />\r\n                        </video>\r\n                    </>\r\n                );\r\n\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 400,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this video?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Jinalayas</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, users }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected videos?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, users } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'video' }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data.parentId || data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.fileUrl ? [res.data?.fileUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ fileUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Jinalaya'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={300}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"User\">\r\n                                    <Select value={data.userId} onChange={v => { handleChange({ 'userId': v }) }} >\r\n                                        {\r\n                                            users.map(v => (\r\n                                                <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                            ))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Video\">\r\n                                    <UploadVideo {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'music';\r\n\r\n    //// singer-type api\r\n    static detailSingerType(id, data) {\r\n        return axios.get(this.baseURL + '/singer-type/details/' + id, { params: data });\r\n    }\r\n    static listSingerType(data) {\r\n        return axios.get(this.baseURL + '/singer-type/list', { params: data });\r\n    }\r\n    static saveSingerType(data, query) {\r\n        return axios.post(this.baseURL + \"/singer-type/save\", data, { params: query });\r\n    }\r\n    static deleteSingerType(id) {\r\n        return axios.post(this.baseURL + '/singer-type/delete', { ids: id });\r\n    }\r\n\r\n    /// singer api\r\n    static detailSinger(id, data) {\r\n        return axios.get(this.baseURL + '/singer/details/' + id, { params: data });\r\n    }\r\n    static listSinger(data) {\r\n        return axios.get(this.baseURL + '/singer/list', { params: data });\r\n    }\r\n    static saveSinger(data, query) {\r\n        return axios.post(this.baseURL + \"/singer/save\", data, { params: query });\r\n    }\r\n    static deleteSinger(id) {\r\n        return axios.post(this.baseURL + '/singer/delete', { ids: id });\r\n    }\r\n\r\n    /// singer file data api\r\n    static detailSingerFileData(id, data) {\r\n        return axios.get(this.baseURL + '/singerFileData/details/' + id, { params: data });\r\n    }\r\n    static listSingerFileData(data) {\r\n        return axios.get(this.baseURL + '/singerFileData/list', { params: data });\r\n    }\r\n    static saveSingerFileData(data, query) {\r\n        return axios.post(this.baseURL + \"/singerFileData/save\", data, { params: query });\r\n    }\r\n    static deleteSingerFileData(id) {\r\n        return axios.post(this.baseURL + '/singerFileData/delete', { ids: id });\r\n    }\r\n\r\n    /// song-category api\r\n    static detailSongCategory(id, data) {\r\n        return axios.get(this.baseURL + '/song-category/details/' + id, { params: data });\r\n    }\r\n    static listSongCategory(data) {\r\n        return axios.get(this.baseURL + '/song-category/list', { params: data });\r\n    }\r\n    static saveSongCategory(data, query) {\r\n        return axios.post(this.baseURL + \"/song-category/save\", data, { params: query });\r\n    }\r\n    static deleteSongCategory(id) {\r\n        return axios.post(this.baseURL + '/song-category/delete', { ids: id });\r\n    }\r\n\r\n     /// song api\r\n     static detailSong(id, data) {\r\n        return axios.get(this.baseURL + '/song/details/' + id, { params: data });\r\n    }\r\n    static listSong(data) {\r\n        return axios.get(this.baseURL + '/song/list', { params: data });\r\n    }\r\n    static saveSong(data, query) {\r\n        return axios.post(this.baseURL + \"/song/save\", data, { params: query });\r\n    }\r\n    static deleteSong(id) {\r\n        return axios.post(this.baseURL + '/song/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/music';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function SingerType() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this singer type?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listSingerType(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteSingerType(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Singer Type</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by type name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected singer type?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailSingerType(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveSingerType(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ _id: res.data._id });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Singer Type'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Modal,\r\n  Spin,\r\n  Image,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport {\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  EyeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport service from \"../../../services/music\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport { AntdMsg } from \"../../../utils/Antd\";\r\nimport commonObj from \"../../../commonObj\";\r\nimport UploadImage from \"../../../utils/UploadImage\";\r\nimport UploadVideo from \"../../../utils/UploadVideo\";\r\nimport moment from \"moment\";\r\nconst viewAccess = true;\r\nconst addAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"add\");\r\nconst editAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"edit\");\r\nconst deleteAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"delete\");\r\n\r\nexport default function SingerFile({ fileType, singerId = null }) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selected, setSelected] = useState([]);\r\n  const [qData, setQData] = useState({\r\n    page: 1,\r\n    limit: 20,\r\n    type: fileType,\r\n    singerId,\r\n  });\r\n  const addNewModalRef = useRef();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"File\",\r\n      dataIndex: \"file\",\r\n      render: (v, row) => {\r\n        if (row.type === \"photo\") {\r\n          return <Image src={v?.url} height={80} />;\r\n        } else if (row.type === \"video\") {\r\n          return (\r\n            <video height=\"80\" controls>\r\n              <source src={v?.url} type=\"video/mp4\" />\r\n            </video>\r\n          );\r\n        } else if (row.type === \"youtube-short\") {\r\n          return v?.url;\r\n        } else if (row.type === \"youtube-video\") {\r\n          return v?.url;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Uploaded At\",\r\n      dataIndex: \"createdAt\",\r\n      render: (v, row) => {\r\n        return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"_id\",\r\n      width: 70,\r\n      hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n      render: (v, row) => {\r\n        return (\r\n          <>\r\n            {deleteAccess ? (\r\n              <Popconfirm\r\n                title=\"Are you sure to delete this File?\"\r\n                onConfirm={() => {\r\n                  deleteData(row._id);\r\n                }}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  danger\r\n                  icon={<DeleteOutlined />}\r\n                />\r\n                &nbsp;\r\n              </Popconfirm>\r\n            ) : null}\r\n            {editAccess ? (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                icon={<EditOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm(row);\r\n                }}\r\n              />\r\n            ) : null}\r\n            {!editAccess && viewAccess ? (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                icon={<EyeOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm(row);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ].filter((item) => !item.hidden);\r\n\r\n  function list() {\r\n    if (viewAccess) {\r\n      setLoading(true);\r\n      service\r\n        .listSingerFileData(qData)\r\n        .then((res) => {\r\n          setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n          setQData({\r\n            ...qData,\r\n            limit: res.extra.limit,\r\n            page: res.extra.page,\r\n            total: res.extra.total,\r\n          });\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  const deleteData = (id) => {\r\n    service\r\n      .deleteSingerFileData(id)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        list();\r\n        setSelected([]);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      });\r\n  };\r\n\r\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n  tableColumns[0].fixed = true;\r\n  tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n  const tableProps = {\r\n    bordered: true,\r\n    loading,\r\n    size: \"small\",\r\n    title: () => (\r\n      <Search\r\n        {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n      />\r\n    ),\r\n    showHeader: true,\r\n    footer: () => <Pagination {...{ qData, setQData }} />,\r\n    rowSelection: {\r\n      onChange: (selectedRowKeys) => {\r\n        setSelected(selectedRowKeys);\r\n      },\r\n    },\r\n    tableLayout: undefined,\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [qData.page, qData.limit]);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        {...tableProps}\r\n        pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n        columns={tableColumns}\r\n        dataSource={data.length ? data : []}\r\n        scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n      />\r\n      <AddForm ref={addNewModalRef} {...{ list, fileType, singerId }} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Search({\r\n  addNewModalRef,\r\n  selected,\r\n  deleteData,\r\n  qData,\r\n  setQData,\r\n  list,\r\n}) {\r\n  const [dataValue, setDataValue] = useState([]);\r\n  const onChange = (v, key) => {\r\n    setDataValue(v);\r\n    qData[key] = v;\r\n    if (v === undefined || v === null) {\r\n      qData[key] = \"\";\r\n      setDataValue([]);\r\n      list();\r\n    }\r\n\r\n    console.log(qData);\r\n  };\r\n  // onChange={v => (setQData({ ...qData, Datekey: v }))}\r\n\r\n  return (\r\n    <Form onSubmitCapture={list} className=\"search-form\">\r\n      <Row gutter={[12, 2]} style={{ margin: \"1rem 0\" }}>\r\n        <Col span={8}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <DatePicker.RangePicker\r\n              style={{ width: \"100%\" }}\r\n              value={dataValue}\r\n              onChange={(e) => onChange(e, \"Datekey\")}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={3}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={5}>\r\n          {addAccess ? (\r\n            <Form.Item style={{ marginBottom: 0, float: \"right\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm();\r\n                }}\r\n              >\r\n                Add New\r\n              </Button>\r\n            </Form.Item>\r\n          ) : null}\r\n          {selected.length ? (\r\n            <Popconfirm\r\n              title=\"Are you sure to delete these selected data?\"\r\n              onConfirm={() => {\r\n                deleteData(selected);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                style={{ float: \"right\" }}\r\n                icon={<DeleteOutlined />}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            </Popconfirm>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n  const { list, fileType, singerId } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1, singerId });\r\n  const [ajxRequesting, setAjxRequesting] = useState(false);\r\n  const [changeForm, setChangeForm] = useState(false);\r\n  const [file, setFile] = useState([]);\r\n\r\n  const handleChange = (value) => {\r\n    setData({ ...Date, ...value });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openForm(dt) {\r\n      setOpen(true);\r\n      setData(dt ? { ...dt } : {});\r\n      if (!dt && addAccess) {\r\n        setChangeForm(true);\r\n      } else if (dt && editAccess) {\r\n        setChangeForm(true);\r\n      } else {\r\n        setChangeForm(false);\r\n      }\r\n    },\r\n  }));\r\n\r\n  const save = () => {\r\n    if (changeForm) {\r\n      setAjxRequesting(true);\r\n      service\r\n        .saveSingerFileData({ ...data, singerId, type: fileType })\r\n        .then((res) => {\r\n          AntdMsg(res.message);\r\n          handleChange({ ...res.data });\r\n          list();\r\n          setOpen(false);\r\n        })\r\n        .catch((err) => {\r\n          if (typeof err.message === \"object\") {\r\n            let dt = err.message[Object.keys(err.message)[0]];\r\n            AntdMsg(dt, \"error\");\r\n          } else {\r\n            AntdMsg(err.message, \"error\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setAjxRequesting(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (file[0]) {\r\n      handleChange({ file: file[0] });\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setData({ _id: null });\r\n    } else {\r\n      setFile([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={(!data._id ? \"Add\" : \"Edit\") + \" Data\"}\r\n        style={{ top: 20 }}\r\n        open={open}\r\n        okText=\"Save\"\r\n        onOk={save}\r\n        okButtonProps={{ disabled: ajxRequesting }}\r\n        onCancel={() => {\r\n          setOpen(false);\r\n        }}\r\n        destroyOnClose\r\n        maskClosable={false}\r\n        width={600}\r\n        className=\"app-modal-body-overflow\"\r\n        footer={[\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          changeForm ? (\r\n            <Button key=\"save\" type=\"primary\" onClick={save}>\r\n              Save\r\n            </Button>\r\n          ) : null,\r\n        ]}\r\n      >\r\n        <Spin\r\n          spinning={ajxRequesting}\r\n          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n        >\r\n          {fileType === \"photo\" ? <Photo {...{ file, setFile }} /> : null}\r\n          {fileType === \"video\" ? <Video {...{ file, setFile }} /> : null}\r\n          {fileType === \"youtube-short\" ? (\r\n            <YoutubeShorts {...{ data, setData }} />\r\n          ) : null}\r\n          {fileType === \"youtube-video\" ? (\r\n            <YoutubeVideo {...{ data, setData }} />\r\n          ) : null}\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nconst Photo = ({ file, setFile }) => {\r\n  return (\r\n    <>\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={24}>\r\n          <UploadImage\r\n            count={1}\r\n            {...{ fileList: file, setFileList: setFile }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nconst Video = ({ file, setFile }) => {\r\n  return (\r\n    <>\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={24}>\r\n          <UploadVideo\r\n            count={1}\r\n            {...{ fileList: file, setFileList: setFile }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nconst YoutubeShorts = ({ data, setData }) => {\r\n  return (\r\n    <>\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={24}>\r\n          <Form.Item label=\"Type\" required>\r\n            <Input\r\n              placeholder=\"Enter Youtube short URL\"\r\n              onChange={(e) => {\r\n                setData({\r\n                  ...data,\r\n                  file: { url: e.target.value, uid: \"0\", name: \"\" },\r\n                });\r\n              }}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst YoutubeVideo = ({ data, setData }) => {\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={24}>\r\n          <Form.Item label=\"Type\" required>\r\n            <Input\r\n              placeholder=\"Enter Youtube video URL\"\r\n              onChange={(e) => {\r\n                setData({\r\n                  ...data,\r\n                  file: { url: e.target.value, uid: \"0\", name: \"\" },\r\n                });\r\n              }}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Modal,\r\n  Spin,\r\n  Typography,\r\n  Tabs,\r\n  Card,\r\n  Select,\r\n  Tag,\r\n} from \"antd\";\r\nimport {\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  EyeOutlined,\r\n  MinusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport service from \"../../../services/music\";\r\nimport locationService from \"../../../services/location\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport { AntdMsg } from \"../../../utils/Antd\";\r\nimport commonObj from \"../../../commonObj\";\r\nimport UploadImage from \"../../../utils/UploadImage\";\r\nimport SingerFile from \"./SingerFile\";\r\n\r\nconst viewAccess = true;\r\nconst addAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"add\");\r\nconst editAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"edit\");\r\nconst deleteAccess =\r\n  commonObj.userType === \"superAdmin\" || commonObj.modules?.includes(\"delete\");\r\n\r\nexport default function Singer() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selected, setSelected] = useState([]);\r\n  const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n  const addNewModalRef = useRef();\r\n  const singerFileDataModalRef = useRef();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      width: 200,\r\n    },\r\n    {\r\n      title: \"Singer Type\",\r\n      dataIndex: \"singerTypeDetails\",\r\n      render: (v) =>\r\n        v?.map((vv, ii) => (\r\n          <Tag color={[\"magenta\", \"cyan\", \"geekblue\", \"orange\"]?.[ii % 4]}>\r\n            {vv?.name}\r\n          </Tag>\r\n        )),\r\n    },\r\n    {\r\n      title: \"File Data\",\r\n      dataIndex: \"_id\",\r\n      width: 150,\r\n      render: (value, row) => (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            singerFileDataModalRef.current.openForm({\r\n              name: row.name,\r\n              _id: value,\r\n            });\r\n          }}\r\n        >\r\n          File Data\r\n        </Button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"_id\",\r\n      width: 70,\r\n      hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n      render: (v, row) => {\r\n        return (\r\n          <>\r\n            {deleteAccess ? (\r\n              <Popconfirm\r\n                title=\"Are you sure to delete this Singer ?\"\r\n                onConfirm={() => {\r\n                  deleteData(row._id);\r\n                }}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  danger\r\n                  icon={<DeleteOutlined />}\r\n                />\r\n                &nbsp;\r\n              </Popconfirm>\r\n            ) : null}\r\n\r\n            {editAccess ? (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                icon={<EditOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm(row._id);\r\n                }}\r\n              />\r\n            ) : null}\r\n            {!editAccess && viewAccess ? (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                icon={<EyeOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm(row._id);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ].filter((item) => !item.hidden);\r\n\r\n  function list() {\r\n    if (viewAccess) {\r\n      setLoading(true);\r\n      service\r\n        .listSinger(qData)\r\n        .then((res) => {\r\n          setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n          setQData({\r\n            ...qData,\r\n            limit: res.extra.limit,\r\n            page: res.extra.page,\r\n            total: res.extra.total,\r\n          });\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  const deleteData = (id) => {\r\n    service\r\n      .deleteSinger(id)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        list();\r\n        setSelected([]);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      });\r\n  };\r\n\r\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n  tableColumns[0].fixed = true;\r\n  tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n  const tableProps = {\r\n    bordered: true,\r\n    loading,\r\n    size: \"small\",\r\n    title: () => (\r\n      <Search\r\n        {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n      />\r\n    ),\r\n    showHeader: true,\r\n    footer: () => <Pagination {...{ qData, setQData }} />,\r\n    rowSelection: {\r\n      onChange: (selectedRowKeys) => {\r\n        setSelected(selectedRowKeys);\r\n      },\r\n    },\r\n    tableLayout: undefined,\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [qData.page, qData.limit]);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={5}>List of Singers</Typography.Title>\r\n      <Table\r\n        {...tableProps}\r\n        pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n        columns={tableColumns}\r\n        dataSource={data.length ? data : []}\r\n        scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n      />\r\n      <AddForm ref={addNewModalRef} {...{ list }} />\r\n      <SingerFileModal ref={singerFileDataModalRef} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Search({\r\n  addNewModalRef,\r\n  selected,\r\n  deleteData,\r\n  qData,\r\n  setQData,\r\n  list,\r\n}) {\r\n  const [singerType, setSingerType] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  useEffect(() => {\r\n    if (viewAccess) {\r\n      service\r\n        .listSingerType({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setSingerType(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Singer Type data not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listState({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setStates(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"States not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listDistrict({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setDistricts(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Districts not loaded\", \"error\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmitCapture={list} className=\"search-form\">\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={4}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Input\r\n              placeholder=\"Search by singer name\"\r\n              value={qData.key}\r\n              onChange={(e) => setQData({ ...qData, key: e.target.value })}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Form.Item>\r\n            <Select\r\n              placeholder=\"Singer Type\"\r\n              value={qData.singerTypeId}\r\n              onChange={(v) => {\r\n                setQData({ ...qData, singerTypeId: v });\r\n              }}\r\n              allowClear\r\n            >\r\n              {singerType.map((v) => (\r\n                <Select.Option key={v._id} value={v._id}>\r\n                  {v.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Form.Item>\r\n            <Select\r\n              placeholder=\"State\"\r\n              value={qData.stateId}\r\n              onChange={(v) => {\r\n                setQData({ ...qData, stateId: v, districtId: null });\r\n              }}\r\n              allowClear\r\n            >\r\n              {states.map((v) => (\r\n                <Select.Option key={v._id} value={v._id}>\r\n                  {v.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Form.Item>\r\n            <Select\r\n              placeholder=\"District\"\r\n              value={qData.districtId}\r\n              onChange={(v) => {\r\n                setQData({ ...qData, districtId: v });\r\n              }}\r\n              allowClear\r\n            >\r\n              {districts\r\n                .filter((v) => v.stateId === qData.stateId)\r\n                .map((v) => (\r\n                  <Select.Option key={v._id} value={v._id}>\r\n                    {v.name}\r\n                  </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={3}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={5}>\r\n          {addAccess ? (\r\n            <Form.Item style={{ marginBottom: 0, float: \"right\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={() => {\r\n                  addNewModalRef.current.openForm();\r\n                }}\r\n              >\r\n                Add New\r\n              </Button>\r\n            </Form.Item>\r\n          ) : null}\r\n          {selected.length ? (\r\n            <Popconfirm\r\n              title=\"Are you sure to delete these selected singers?\"\r\n              onConfirm={() => {\r\n                deleteData(selected);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                style={{ float: \"right\" }}\r\n                icon={<DeleteOutlined />}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            </Popconfirm>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n  const { list } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1 });\r\n  const [ajxRequesting, setAjxRequesting] = useState(false);\r\n  const [ln, setLn] = useState(\"en\");\r\n  const [changeForm, setChangeForm] = useState(false);\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const handleChange = (value) => {\r\n    if (changeForm) {\r\n      Object.entries(value).forEach((ent) => {\r\n        let varDt = data;\r\n        const k = ent[0];\r\n        const v = ent[1];\r\n        let keys = k.split(\".\");\r\n        for (let i = 0; i < keys.length; i++) {\r\n          if (i + 1 === keys.length) {\r\n            varDt[keys[i]] = v;\r\n          } else {\r\n            if (typeof varDt[keys[i]] === \"undefined\") {\r\n              if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                varDt[keys[i]] = [];\r\n              } else {\r\n                varDt[keys[i]] = {};\r\n              }\r\n            }\r\n            varDt = varDt[keys[i]];\r\n          }\r\n        }\r\n      });\r\n      setData({ ...data });\r\n    }\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openForm(dt) {\r\n      setOpen(true);\r\n      setData(dt ? { _id: dt } : { contactNos: [\"\"] });\r\n      if (!dt && addAccess) {\r\n        setChangeForm(true);\r\n      } else if (dt && editAccess) {\r\n        setChangeForm(true);\r\n      } else {\r\n        setChangeForm(false);\r\n      }\r\n    },\r\n  }));\r\n\r\n  const getDetails = () => {\r\n    setAjxRequesting(true);\r\n    service\r\n      .detailSinger(data.parentId || data._id, { ln })\r\n      .then((res) => {\r\n        setData(res.data || {});\r\n        setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n\r\n  const save = () => {\r\n    if (changeForm) {\r\n      setAjxRequesting(true);\r\n      service\r\n        .saveSinger(data, { ln })\r\n        .then((res) => {\r\n          AntdMsg(res.message);\r\n          handleChange({ ...res.data });\r\n          if (ln === \"en\") {\r\n            list();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (typeof err.message === \"object\") {\r\n            let dt = err.message[Object.keys(err.message)[0]];\r\n            AntdMsg(dt, \"error\");\r\n          } else {\r\n            AntdMsg(err.message, \"error\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setAjxRequesting(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data._id) {\r\n      getDetails();\r\n    }\r\n  }, [ln, data._id]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setData({ _id: null });\r\n    } else {\r\n      setLn(\"en\");\r\n      setFileList([]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    handleChange({ imgUrl: fileList?.[0] });\r\n  }, [fileList]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={(!data._id ? \"Add\" : \"Edit\") + \" Singer\"}\r\n        style={{ top: 20 }}\r\n        open={open}\r\n        okText=\"Save\"\r\n        onOk={save}\r\n        okButtonProps={{ disabled: ajxRequesting }}\r\n        onCancel={() => {\r\n          setOpen(false);\r\n        }}\r\n        // destroyOnClose\r\n        maskClosable={false}\r\n        width={600}\r\n        className=\"app-modal-body-overflow\"\r\n        footer={[\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          changeForm ? (\r\n            <Button key=\"save\" type=\"primary\" onClick={save}>\r\n              Save\r\n            </Button>\r\n          ) : null,\r\n        ]}\r\n      >\r\n        <Spin\r\n          spinning={ajxRequesting}\r\n          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n        >\r\n          <Tabs\r\n            activeKey={ln}\r\n            type=\"card\"\r\n            size=\"small\"\r\n            style={{ marginBottom: 0 }}\r\n            onChange={(v) => {\r\n              setLn(v);\r\n            }}\r\n            items={[\r\n              {\r\n                label: \"English\",\r\n                key: \"en\",\r\n                children: (\r\n                  <Card style={{ borderTop: 0 }}>\r\n                    <EnForm\r\n                      {...{\r\n                        data,\r\n                        handleChange,\r\n                        save,\r\n                        changeForm,\r\n                        fileList,\r\n                        setFileList,\r\n                      }}\r\n                    />\r\n                  </Card>\r\n                ),\r\n              },\r\n              {\r\n                label: \"हिन्दी\",\r\n                key: \"hi\",\r\n                children: (\r\n                  <Card style={{ borderTop: 0 }}>\r\n                    <HiForm\r\n                      {...{\r\n                        data,\r\n                        handleChange,\r\n                        save,\r\n                        changeForm,\r\n                        fileList,\r\n                        setFileList,\r\n                      }}\r\n                    />\r\n                  </Card>\r\n                ),\r\n                disabled: !data._id,\r\n              },\r\n              {\r\n                label: \"ગુજરાતી\",\r\n                key: \"gu\",\r\n                children: (\r\n                  <Card style={{ borderTop: 0 }}>\r\n                    <GuForm\r\n                      {...{\r\n                        data,\r\n                        handleChange,\r\n                        save,\r\n                        changeForm,\r\n                        fileList,\r\n                        setFileList,\r\n                      }}\r\n                    />\r\n                  </Card>\r\n                ),\r\n                disabled: !data._id,\r\n              },\r\n            ]}\r\n          />\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n  const [singerType, setSingerType] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  useEffect(() => {\r\n    if (viewAccess) {\r\n      service\r\n        .listSingerType({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setSingerType(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Singer Type data not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listState({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setStates(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"States not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listDistrict({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setDistricts(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Districts not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listCity({ isAll: 1, ln: \"en\" })\r\n        .then((res) => {\r\n          setCities(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Cities not loaded\", \"error\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form layout=\"vertical\" disabled={!changeForm}>\r\n        <Row gutter={[12, 2]}>\r\n          <Col span={18}>\r\n            <Row gutter={[12, 2]}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Name\" required>\r\n                  <Input\r\n                    placeholder=\"Name\"\r\n                    value={data.name}\r\n                    onChange={(e) => {\r\n                      handleChange({ name: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Type\" required>\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    value={data.singerTypeIds}\r\n                    onChange={(v) => {\r\n                      handleChange({ singerTypeIds: v });\r\n                    }}\r\n                  >\r\n                    {singerType.map((v) => (\r\n                      <Select.Option key={v._id} value={v._id}>\r\n                        {v.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Form.Item label=\"Avatar\">\r\n              <UploadImage {...{ fileList, setFileList }} count={1} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"State\" required>\r\n              <Select\r\n                value={data.stateId}\r\n                onChange={(v) => {\r\n                  handleChange({ stateId: v, districtId: null, cityId: null });\r\n                }}\r\n              >\r\n                {states.map((v) => (\r\n                  <Select.Option key={v._id} value={v._id}>\r\n                    {v.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"District\" required>\r\n              <Select\r\n                value={data.districtId}\r\n                onChange={(v) => {\r\n                  handleChange({ districtId: v, cityId: null });\r\n                }}\r\n              >\r\n                {districts\r\n                  .filter((v) => v.stateId === data.stateId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v._id} value={v._id}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"City\" required>\r\n              <Select\r\n                value={data.cityId}\r\n                onChange={(v) => {\r\n                  handleChange({ cityId: v });\r\n                }}\r\n              >\r\n                {cities\r\n                  .filter((v) => v.districtId === data.districtId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v._id} value={v._id}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <Form.Item label=\"Contact Numbers\">\r\n              <Row gutter={[12, 2]}>\r\n                {data.contactNos?.map((v, i) => (\r\n                  <>\r\n                    <Col span={20}>\r\n                      <Input\r\n                        placeholder=\"Ex- +91 1111100000\"\r\n                        value={v}\r\n                        onChange={(e) => {\r\n                          handleChange({ [`contactNos.${i}`]: e.target.value });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      {i !== 0 ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          danger\r\n                          shape=\"circle\"\r\n                          icon={<MinusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [\r\n                                ...data.contactNos.filter((vv, ii) => ii !== i),\r\n                              ],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                      {i + 1 === data.contactNos?.length ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"circle\"\r\n                          icon={<PlusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [...data.contactNos, \"\"],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                    </Col>\r\n                  </>\r\n                ))}\r\n              </Row>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n  const [singerType, setSingerType] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  useEffect(() => {\r\n    if (viewAccess) {\r\n      service\r\n        .listSingerType({ isAll: 1, ln: \"hi\" })\r\n        .then((res) => {\r\n          setSingerType(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Singer Type data not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listState({ isAll: 1, ln: \"hi\" })\r\n        .then((res) => {\r\n          setStates(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"States not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listDistrict({ isAll: 1, ln: \"hi\" })\r\n        .then((res) => {\r\n          setDistricts(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Districts not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listCity({ isAll: 1, ln: \"hi\" })\r\n        .then((res) => {\r\n          setCities(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Cities not loaded\", \"error\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form layout=\"vertical\" disabled={!changeForm}>\r\n        <Row gutter={[12, 2]}>\r\n          <Col span={18}>\r\n            <Row gutter={[12, 2]}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Name\" required>\r\n                  <Input\r\n                    placeholder=\"Name\"\r\n                    value={data.name}\r\n                    onChange={(e) => {\r\n                      handleChange({ name: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Type\" required>\r\n                  <Select mode=\"multiple\" value={data.singerTypeIds} disabled>\r\n                    {singerType.map((v) => (\r\n                      <Select.Option key={v.parentId} value={v.parentId}>\r\n                        {v.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Form.Item label=\"Avatar\">\r\n              <UploadImage {...{ fileList, setFileList }} count={1} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"State\" required>\r\n              <Select value={data.stateId} disabled>\r\n                {states.map((v) => (\r\n                  <Select.Option key={v.parentId} value={v.parentId}>\r\n                    {v.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"District\" required>\r\n              <Select value={data.districtId} disabled>\r\n                {districts\r\n                  .filter((v) => v.stateId === data.stateId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v.parentId} value={v.parentId}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"City\" required>\r\n              <Select value={data.cityId} disabled>\r\n                {cities\r\n                  .filter((v) => v.districtId === data.districtId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v.parentId} value={v.parentId}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"Contact Numbers\">\r\n              <Row gutter={[12, 2]}>\r\n                {data.contactNos?.map((v, i) => (\r\n                  <>\r\n                    <Col span={20}>\r\n                      <Input\r\n                        placeholder=\"Ex- +91 1111100000\"\r\n                        value={v}\r\n                        onChange={(e) => {\r\n                          handleChange({ [`contactNos.${i}`]: e.target.value });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      {i !== 0 ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          danger\r\n                          shape=\"circle\"\r\n                          icon={<MinusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [\r\n                                ...data.contactNos.filter((vv, ii) => ii !== i),\r\n                              ],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                      {i + 1 === data.contactNos?.length ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"circle\"\r\n                          icon={<PlusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [...data.contactNos, \"\"],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                    </Col>\r\n                  </>\r\n                ))}\r\n              </Row>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n  const [singerType, setSingerType] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  useEffect(() => {\r\n    if (viewAccess) {\r\n      service\r\n        .listSingerType({ isAll: 1, ln: \"gu\" })\r\n        .then((res) => {\r\n          setSingerType(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Singer Type data not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listState({ isAll: 1, ln: \"gu\" })\r\n        .then((res) => {\r\n          setStates(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"States not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listDistrict({ isAll: 1, ln: \"gu\" })\r\n        .then((res) => {\r\n          setDistricts(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Districts not loaded\", \"error\");\r\n        });\r\n      locationService\r\n        .listCity({ isAll: 1, ln: \"gu\" })\r\n        .then((res) => {\r\n          setCities(res.data || []);\r\n        })\r\n        .catch((err) => {\r\n          AntdMsg(\"Cities not loaded\", \"error\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form layout=\"vertical\" disabled={!changeForm}>\r\n        <Row gutter={[12, 2]}>\r\n          <Col span={18}>\r\n            <Row gutter={[12, 2]}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Name\" required>\r\n                  <Input\r\n                    placeholder=\"Name\"\r\n                    value={data.name}\r\n                    onChange={(e) => {\r\n                      handleChange({ name: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Singer Type\" required>\r\n                  <Select mode=\"multiple\" value={data.singerTypeIds} disabled>\r\n                    {singerType.map((v) => (\r\n                      <Select.Option key={v.parentId} value={v.parentId}>\r\n                        {v.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Form.Item label=\"Avatar\">\r\n              <UploadImage {...{ fileList, setFileList }} count={1} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"State\" required>\r\n              <Select value={data.stateId} disabled>\r\n                {states.map((v) => (\r\n                  <Select.Option key={v.parentId} value={v.parentId}>\r\n                    {v.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"District\" required>\r\n              <Select value={data.districtId} disabled>\r\n                {districts\r\n                  .filter((v) => v.stateId === data.stateId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v.parentId} value={v.parentId}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"City\" required>\r\n              <Select value={data.cityId} disabled>\r\n                {cities\r\n                  .filter((v) => v.districtId === data.districtId)\r\n                  .map((v) => (\r\n                    <Select.Option key={v.parentId} value={v.parentId}>\r\n                      {v.name}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item label=\"Contact Numbers\">\r\n              <Row gutter={[12, 2]}>\r\n                {data.contactNos?.map((v, i) => (\r\n                  <>\r\n                    <Col span={20}>\r\n                      <Input\r\n                        placeholder=\"Ex- +91 1111100000\"\r\n                        value={v}\r\n                        onChange={(e) => {\r\n                          handleChange({ [`contactNos.${i}`]: e.target.value });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      {i !== 0 ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          danger\r\n                          shape=\"circle\"\r\n                          icon={<MinusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [\r\n                                ...data.contactNos.filter((vv, ii) => ii !== i),\r\n                              ],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                      {i + 1 === data.contactNos?.length ? (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"circle\"\r\n                          icon={<PlusOutlined />}\r\n                          onClick={() => {\r\n                            handleChange({\r\n                              contactNos: [...data.contactNos, \"\"],\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                    </Col>\r\n                  </>\r\n                ))}\r\n              </Row>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SingerFileModal = forwardRef((props, ref) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1 });\r\n  const [fileType, setFileType] = useState(\"photo\");\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openForm(dt) {\r\n      setOpen(true);\r\n      setData(dt);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={\r\n          <>\r\n            File Data of{\" \"}\r\n            <Typography.Text type=\"danger\">{data.name}</Typography.Text>\r\n          </>\r\n        }\r\n        style={{ top: 20 }}\r\n        open={open}\r\n        okText=\"Save\"\r\n        onCancel={() => {\r\n          setOpen(false);\r\n        }}\r\n        maskClosable={false}\r\n        width={1400}\r\n        destroyOnClose\r\n        className=\"app-modal-body-overflow\"\r\n        footer={null}\r\n      >\r\n        <Tabs\r\n          activeKey={fileType}\r\n          type=\"card\"\r\n          size=\"small\"\r\n          style={{ marginBottom: 0 }}\r\n          destroyInactiveTabPane\r\n          onChange={(v) => {\r\n            setFileType(v);\r\n          }}\r\n          items={[\r\n            {\r\n              label: \"Photo\",\r\n              key: \"photo\",\r\n              children: <SingerFile singerId={data._id} fileType={fileType} />,\r\n            },\r\n            {\r\n              label: \"Video\",\r\n              key: \"video\",\r\n              children: <SingerFile singerId={data._id} fileType={fileType} />,\r\n            },\r\n            {\r\n              label: \"Youtube Short\",\r\n              key: \"youtube-short\",\r\n              children: <SingerFile singerId={data._id} fileType={fileType} />,\r\n            },\r\n            {\r\n              label: \"Youtube Video\",\r\n              key: \"youtube-video\",\r\n              children: <SingerFile singerId={data._id} fileType={fileType} />,\r\n            },\r\n          ]}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/music';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function SongCategory() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 200,\r\n            render: v => v === 'pracheenStawan'\r\n                ? 'Pracheen Stawan'\r\n                : v === 'bhaktiSong'\r\n                    ? 'Bhakti Song'\r\n                    : v === '24tirthankarStawan'\r\n                        ? '24 Tirthankar Stawan'\r\n                        : v === 'paryushanStawan'\r\n                            ? 'Paryushan Stawan'\r\n                            : v === 'tapasyaSong'\r\n                                ? 'Tapasya Song'\r\n                                : v === 'dikshaSong'\r\n                                    ? 'Diksha Song'\r\n                                    : v === 'stuti'\r\n                                        ? 'Stuti'\r\n                                        : 'Other'\r\n\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this song category?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listSongCategory(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteSongCategory(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Song Categories</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by category name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected song categories?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true, type: 'other' }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess){\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailSongCategory(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveSongCategory(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Song Category'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Type\" required>\r\n                            <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                <Select.Option value={'pracheenStawan'}>Pracheen Stawan</Select.Option>\r\n                                <Select.Option value={'bhaktiSong'}>Bhakti Song</Select.Option>\r\n                                <Select.Option value={'24tirthankarStawan'}>24 Tirthankar Stawan</Select.Option>\r\n                                <Select.Option value={'paryushanStawan'}>Paryushan Stawan</Select.Option>\r\n                                <Select.Option value={'tapasyaSong'}>Tapasya Song</Select.Option>\r\n                                <Select.Option value={'dikshaSong'}>Diksha Song</Select.Option>\r\n                                <Select.Option value={'stuti'}>Stuti</Select.Option>\r\n                                <Select.Option value={'other'}>Other</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Type\" required>\r\n                            <Select value={data.type} disabled >\r\n                                <Select.Option value={'pracheenStawan'}>Pracheen Stawan</Select.Option>\r\n                                <Select.Option value={'bhaktiSong'}>Bhakti Song</Select.Option>\r\n                                <Select.Option value={'24tirthankarStawan'}>24 Tirthankar Stawan</Select.Option>\r\n                                <Select.Option value={'paryushanStawan'}>Paryushan Stawan</Select.Option>\r\n                                <Select.Option value={'tapasyaSong'}>Tapasya Song</Select.Option>\r\n                                <Select.Option value={'dikshaSong'}>Diksha Song</Select.Option>\r\n                                <Select.Option value={'stuti'}>Stuti</Select.Option>\r\n                                <Select.Option value={'other'}>Other</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Type\" required>\r\n                            <Select value={data.type} disabled >\r\n                                <Select.Option value={'pracheenStawan'}>Pracheen Stawan</Select.Option>\r\n                                <Select.Option value={'bhaktiSong'}>Bhakti Song</Select.Option>\r\n                                <Select.Option value={'24tirthankarStawan'}>24 Tirthankar Stawan</Select.Option>\r\n                                <Select.Option value={'paryushanStawan'}>Paryushan Stawan</Select.Option>\r\n                                <Select.Option value={'tapasyaSong'}>Tapasya Song</Select.Option>\r\n                                <Select.Option value={'dikshaSong'}>Diksha Song</Select.Option>\r\n                                <Select.Option value={'stuti'}>Stuti</Select.Option>\r\n                                <Select.Option value={'other'}>Other</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadAudio({ fileList, setFileList, count = 1, disabled = false }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    return <Upload\r\n        accept=\"audio/*\"\r\n        customRequest={uploadImage}\r\n        onChange={handleOnChange}\r\n        onRemove={handleRemove}\r\n        // listType=\"picture-card\"\r\n        fileList={fileList}\r\n        className=\"image-upload-grid\"\r\n        disabled={disabled}\r\n        onPreview={(file) => {\r\n            return fetch(file.url, {\r\n                method: 'GET',\r\n            })\r\n                .then(res => res.json())\r\n                .then(({ thumbnail }) => {\r\n                    return thumbnail;\r\n                });\r\n        }}\r\n    >\r\n        {fileList?.length >= count ? null : <Button icon={<UploadOutlined />}>Upload</Button>\r\n        }\r\n    </Upload >\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/music';\r\nimport serviceBhagwan from '../../../services/bhagwan';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport UploadAudio from '../../../utils/UploadAudio';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Song() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Song Audio',\r\n            dataIndex: 'songUrl',\r\n            width: 420,\r\n            render: (v) => {\r\n                return <>\r\n                    <audio controls style={{ width: 400 }}>\r\n                        <source src={v?.url} type=\"audio/ogg\" />\r\n                        Your browser does not support the audio tag.\r\n                    </audio>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this song ?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.listSong(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteSong(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Songs</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const [singers, setSingers] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            service.listSinger({ isAll: 1, ln: 'en' }).then(res => { setSingers(res.data || []); }).catch(err => { AntdMsg('Singer Type data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by song name or lyrics\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select placeholder=\"Singer Type\" value={qData.singerId} onChange={v => { setQData({ ...qData, singerId: v }) }} allowClear >\r\n                            {\r\n                                singers.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected songs?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: [''] }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailSong(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.songUrl ? [res.data?.songUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.saveSong(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ songUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Song'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [singers, setSingers] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            serviceBhagwan.list({ isAll: 1, ln: 'en' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan not loaded', 'error'); });\r\n            service.listSongCategory({ isAll: 1, ln: 'en' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Song categories not loaded', 'error'); });\r\n            service.listSinger({ isAll: 1, ln: 'en' }).then(res => { setSingers(res.data || []); }).catch(err => { AntdMsg('Singers data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Audio File\">\r\n                            <UploadAudio {...{ fileList, setFileList }} count={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Bhagwan\">\r\n                            <Select value={data.bhagwanId} onChange={v => { handleChange({ bhagwanId: v }) }} >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Song Categories\" required>\r\n                            <Select mode=\"multiple\" value={data.categoryIds} onChange={v => { handleChange({ categoryIds: v }) }} >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Singers\">\r\n                            <Select mode=\"multiple\" value={data.singerIds} onChange={v => { handleChange({ singerIds: v }) }} >\r\n                                {\r\n                                    singers.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Lyrics\" required>\r\n                            <Input.TextArea placeholder=\"Lyrics\" value={data.lyrics} onChange={e => { handleChange({ lyrics: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [singers, setSingers] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            serviceBhagwan.list({ isAll: 1, ln: 'hi' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan not loaded', 'error'); });\r\n            service.listSongCategory({ isAll: 1, ln: 'hi' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Song categories not loaded', 'error'); });\r\n            service.listSinger({ isAll: 1, ln: 'hi' }).then(res => { setSingers(res.data || []); }).catch(err => { AntdMsg('Singers data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Audio File\">\r\n                            <UploadAudio {...{ fileList, setFileList }} count={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Bhagwan\">\r\n                            <Select value={data.bhagwanId} disabled >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Song Categories\" required>\r\n                            <Select mode=\"multiple\" value={data.categoryIds} disabled >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Singers\" required>\r\n                            <Select mode=\"multiple\" value={data.singerIds} disabled >\r\n                                {\r\n                                    singers.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Lyrics\" required>\r\n                            <Input.TextArea placeholder=\"Lyrics\" value={data.lyrics} onChange={e => { handleChange({ lyrics: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList }) => {\r\n    const [bhagwan, setBhagwan] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [singers, setSingers] = useState([]);\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            serviceBhagwan.list({ isAll: 1, ln: 'gu' }).then(res => { setBhagwan(res.data || []); }).catch(err => { AntdMsg('Bhagwan not loaded', 'error'); });\r\n            service.listSongCategory({ isAll: 1, ln: 'gu' }).then(res => { setCategories(res.data || []); }).catch(err => { AntdMsg('Song categories not loaded', 'error'); });\r\n            service.listSinger({ isAll: 1, ln: 'gu' }).then(res => { setSingers(res.data || []); }).catch(err => { AntdMsg('Singers data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Audio File\">\r\n                            <UploadAudio {...{ fileList, setFileList }} count={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Name\" required>\r\n                            <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Bhagwan\">\r\n                            <Select value={data.bhagwanId} disabled >\r\n                                {\r\n                                    bhagwan.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Song Categories\" required>\r\n                            <Select mode=\"multiple\" value={data.categoryIds} disabled >\r\n                                {\r\n                                    categories.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Singers\" required>\r\n                            <Select mode=\"multiple\" value={data.singerIds} disabled >\r\n                                {\r\n                                    singers.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Lyrics\" required>\r\n                            <Input.TextArea placeholder=\"Lyrics\" value={data.lyrics} onChange={e => { handleChange({ lyrics: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tag, Select, Tabs, Card } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/jinalaya';\r\nimport jinalayaService from '../../../services/jinalaya';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport UploadAudio from '../../../utils/UploadAudio';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Parshwanath108({ bhagwanId = null, jinalayaId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, isPopulate: 1, bhagwanId, jinalayaId });\r\n    const addNewModalRef = useRef();\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Stuti Audio',\r\n            dataIndex: 'stutiFile',\r\n            width: 420,\r\n            render: (v) => {\r\n                return <>\r\n                    <audio controls style={{ width: 400 }}>\r\n                        <source src={v?.url} type=\"audio/ogg\" />\r\n                        Your browser does not support the audio tag.\r\n                    </audio>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Stuti English',\r\n            dataIndex: 'stuti',\r\n            // width: 400,\r\n            render: (v) => <Typography.Paragraph ellipsis={{ expandable: true }}>{v}</Typography.Paragraph>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this 108 parshwanath?\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.list108(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete108(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !bhagwanId && !jinalayaId\r\n                    ? <Typography.Title level={5}>List of 108 Parshwanath</Typography.Title>\r\n                    : null\r\n            }\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, bhagwanId, jinalayaId, jinalayas }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, bhagwanId, jinalayaId }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Reload</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected 108 Parshwanath?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, jinalayaId, bhagwanId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState('en');\r\n    const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [fileListAudio, setFileListAudio] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {\r\n                        stuti: \"\"\r\n                    }\r\n            );\r\n            if (!dt && addAccess) {\r\n                setChangeForm(true);\r\n            } else if (dt && editAccess) {\r\n                setChangeForm(true);\r\n            } else {\r\n                setChangeForm(false);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail108(data.parentId || data._id, { ln }).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n            setFileListAudio(res.data?.stutiFile ? [res.data?.stutiFile] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service.save108(data, { ln }).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                if (ln === \"en\") {\r\n                    list();\r\n                }\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn('en');\r\n            setFileList([]);\r\n            setFileListAudio([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n    useEffect(() => {\r\n        handleChange({ stutiFile: fileListAudio?.[0] });\r\n    }, [fileListAudio]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' 108 Parshwanath'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    changeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"English\",\r\n                                key: \"en\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <EnForm {...{ data, handleChange, save, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"हिन्दी\",\r\n                                key: \"hi\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <HiForm {...{ data, handleChange, save, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"ગુજરાતી\",\r\n                                key: \"gu\",\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <GuForm {...{ data, handleChange, save, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst EnForm = ({ data, handleChange, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'en', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Stuti Audio\">\r\n                            <UploadAudio {...{ fileList: fileListAudio, setFileList: setFileListAudio }} count={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Stuti English\" required>\r\n                            <Input.TextArea rows={8} placeholder=\"Stuti English\" value={data?.stuti} onChange={e => { handleChange({ stuti: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} onChange={v => { handleChange({ jinalayaId: v }) }} disabled={jinalayaId}>\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst HiForm = ({ data, handleChange, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'hi', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={1} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Stuti Audio\">\r\n                            <UploadAudio {...{ fileList: fileListAudio, setFileList: setFileListAudio }} count={1} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Stuti Hindi\" required>\r\n                            <Input.TextArea rows={8} placeholder=\"Stuti Hindi\" value={data?.stuti} onChange={e => { handleChange({ stuti: e.target.value }) }}  />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} disabled>\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst GuForm = ({ data, handleChange, changeForm, fileList, setFileList, fileListAudio, setFileListAudio, jinalayaId, bhagwanId }) => {\r\n    const [jinalayas, setJinalayas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (viewAccess) {\r\n            jinalayaService.list({ isAll: 1, ln: 'gu', bhagwanId }).then(res => { setJinalayas(res.data || []); }).catch(err => { AntdMsg('Jinalaya data not loaded', 'error'); });\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" disabled={!changeForm}>\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Jinalaya's Photo\">\r\n                            <UploadImage {...{ fileList, setFileList }} count={1} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Stuti Audio\">\r\n                            <UploadAudio {...{ fileList: fileListAudio, setFileList: setFileListAudio }} count={1} disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Stuti Gujrati\" required>\r\n                            <Input.TextArea rows={8} placeholder=\"Stuti Gujrati\" value={data?.stuti} onChange={e => { handleChange({ stuti: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Jinalaya\" required>\r\n                            <Select value={data.jinalayaId} disabled >\r\n                                {\r\n                                    jinalayas.map(v => (\r\n                                        <Select.Option key={v.parentId} value={v.parentId}>{v.name}</Select.Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Status\" required>\r\n                            <Select value={data.status} onChange={v => { handleChange({ status: v }) }} disabled >\r\n                                <Select.Option value={true}>Active</Select.Option>\r\n                                <Select.Option value={false}>Inactive</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    )\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'setting';\r\n    // category : \r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/setting';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n// import TinyMce from '../../utils/TinyMce';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Setting({ type }) {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [selected, setSelected] = useState([]);\r\n\tconst [qData, setQData] = useState({ page: 1, limit: 20 });\r\n\tconst addNewModalRef = useRef();\r\n\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Data',\r\n\t\t\tdataIndex: 'data',\r\n\t\t\t// width: 200,\r\n\t\t\trender: (v) => <Typography.Paragraph ellipsis={{ expandable: true }}>{v}</Typography.Paragraph>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Type',\r\n\t\t\tdataIndex: 'type',\r\n\t\t\twidth: 150,\r\n\t\t\trender: v => v === 'aboutus'\r\n\t\t\t\t? 'About Us'\r\n\t\t\t\t: v === 'termcondition'\r\n\t\t\t\t\t? 'Terms & Condition'\r\n\t\t\t\t\t: v === 'faq'\r\n\t\t\t\t\t\t? 'Faq'\r\n\t\t\t\t\t\t: null\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Action',\r\n\t\t\tdataIndex: '_id',\r\n\t\t\twidth: 70,\r\n\t\t\thidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n\t\t\trender: (v, row) => {\r\n\t\t\t\treturn <>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeleteAccess\r\n\t\t\t\t\t\t\t? <Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure to delete this Data?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => { deleteData(row._id); }}\r\n\t\t\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teditAccess\r\n\t\t\t\t\t\t\t? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!editAccess && viewAccess\r\n\t\t\t\t\t\t\t? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t},\r\n\t].filter(item => !item.hidden);\r\n\r\n\tfunction list() {\r\n\t\tif (viewAccess) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tservice.list(qData).then(res => {\r\n\t\t\t\tsetData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n\t\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n\t\t\t}).catch(err => { }).finally(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteData = (id) => {\r\n\t\tservice.delete(id).then(res => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\tlist();\r\n\t\t\tsetSelected([]);\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t})\r\n\t}\r\n\r\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n\ttableColumns[0].fixed = true;\r\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n\tconst tableProps = {\r\n\t\tbordered: true,\r\n\t\tloading,\r\n\t\tsize: 'small',\r\n\t\ttitle: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n\t\tshowHeader: true,\r\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\r\n\t\trowSelection: {\r\n\t\t\tonChange: (selectedRowKeys) => {\r\n\t\t\t\tsetSelected(selectedRowKeys);\r\n\t\t\t},\r\n\t\t},\r\n\t\ttableLayout: undefined,\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlist();\r\n\t}, [qData.page, qData.limit]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography.Title level={5}>List of  Settings</Typography.Title>\r\n\r\n\t\t\t<Table\r\n\t\t\t\t{...tableProps}\r\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\tdataSource={data.length ? data : []}\r\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n\t\t\t/>\r\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, type }} />\r\n\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\r\n\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taddAccess\r\n\t\t\t\t\t\t\t? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tselected.length\r\n\t\t\t\t\t\t\t? <Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure to delete these selected Data?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => { deleteData(selected); }}\r\n\t\t\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n\tconst { list } = props;\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [data, setData] = useState({ aspect: 1 });\r\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\r\n\tconst [ln, setLn] = useState('en');\r\n\tconst [changeForm, setChangeForm] = useState(false);\r\n\tconst [file, setFile] = useState([]);\r\n\tconst [thumbFile, setThumbFile] = useState([]);\r\n\r\n\r\n\r\n\tconst handleChange = (value) => {\r\n\t\tif (changeForm) {\r\n\t\t\tObject.entries(value).forEach(ent => {\r\n\t\t\t\tlet varDt = data;\r\n\t\t\t\tconst k = ent[0];\r\n\t\t\t\tconst v = ent[1];\r\n\t\t\t\tlet keys = k.split('.');\r\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\t\t\tif (i + 1 === keys.length) {\r\n\t\t\t\t\t\tvarDt[keys[i]] = v;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (typeof varDt[keys[i]] === 'undefined') {\r\n\t\t\t\t\t\t\tif (parseInt(keys[i + 1]) * 1 >= 0) {\r\n\t\t\t\t\t\t\t\tvarDt[keys[i]] = [];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvarDt[keys[i]] = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} varDt = varDt[keys[i]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetData({ ...data });\r\n\t\t}\r\n\t}\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\topenForm(dt) {\r\n\t\t\tsetOpen(true);\r\n\t\t\tsetData(\r\n\t\t\t\tdt\r\n\t\t\t\t\t? { _id: dt }\r\n\t\t\t\t\t: { status: true }\r\n\t\t\t);\r\n\t\t\tif (!dt && addAccess) {\r\n\t\t\t\tsetChangeForm(true);\r\n\t\t\t} else if (dt && editAccess) {\r\n\t\t\t\tsetChangeForm(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetChangeForm(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}));\r\n\r\n\tconst getDetails = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.detail(data.parentId || data._id, { ln }).then(res => {\r\n\t\t\tsetData(res.data || {});\r\n\t\t\tsetFile(res.data?.imgUrls || []);\r\n\t\t\tsetThumbFile(res.data?.thumbImgUrl || []);\r\n\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\r\n\tconst save = () => {\r\n\t\tif (changeForm) {\r\n\t\t\tsetAjxRequesting(true);\r\n\t\t\tservice.save(data, { ln }).then((res) => {\r\n\t\t\t\tAntdMsg(res.message);\r\n\t\t\t\thandleChange({ ...res.data });\r\n\t\t\t\tif (ln === \"en\") {\r\n\t\t\t\t\tlist();\r\n\t\t\t\t}\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\t\tAntdMsg(dt, 'error');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAntdMsg(err.message, 'error');\r\n\t\t\t\t}\r\n\t\t\t}).finally(() => {\r\n\t\t\t\tsetAjxRequesting(false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data._id) {\r\n\t\t\tgetDetails();\r\n\t\t}\r\n\t}, [ln, data._id]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!open) {\r\n\t\t\tsetData({ _id: null });\r\n\t\t} else {\r\n\t\t\tsetLn('en');\r\n\t\t\tsetFile([]);\r\n\t\t\tsetThumbFile([]);\r\n\r\n\t\t}\r\n\t}, [open]);\r\n\tuseEffect(() => {\r\n\t\thandleChange({ imgUrls: file });\r\n\t\thandleChange({ imgUrl: thumbFile?.[0] });\r\n\t}, [file, thumbFile]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tokText=\"Save\"\r\n\t\t\t\tonOk={save}\r\n\t\t\t\tokButtonProps={{ disabled: ajxRequesting }}\r\n\t\t\t\tonCancel={() => { setOpen(false); }}\r\n\t\t\t\t// destroyOnClose\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\twidth={1200}\r\n\t\t\t\tclassName=\"app-modal-body-overflow\"\r\n\t\t\t\tfooter={[\r\n\t\t\t\t\t<Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n\t\t\t\t\tchangeForm ? <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button> : null,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n\t\t\t\t\t<Tabs activeKey={ln} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setLn(v); }}\r\n\t\t\t\t\t\titems={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: \"English\",\r\n\t\t\t\t\t\t\t\tkey: \"en\",\r\n\t\t\t\t\t\t\t\tchildren: <Card style={{ borderTop: 0 }}>\r\n\t\t\t\t\t\t\t\t\t<EnForm {...{ data, handleChange, save, changeForm }} />\r\n\t\t\t\t\t\t\t\t</Card>,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: \"हिन्दी\",\r\n\t\t\t\t\t\t\t\tkey: \"hi\",\r\n\t\t\t\t\t\t\t\tchildren: <Card style={{ borderTop: 0 }}>\r\n\t\t\t\t\t\t\t\t\t<HiForm {...{ data, handleChange, save, changeForm }} />\r\n\t\t\t\t\t\t\t\t</Card>,\r\n\t\t\t\t\t\t\t\tdisabled: !data._id\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: \"ગુજરાતી\",\r\n\t\t\t\t\t\t\t\tkey: \"gu\",\r\n\t\t\t\t\t\t\t\tchildren: <Card style={{ borderTop: 0 }}>\r\n\t\t\t\t\t\t\t\t\t<GuForm {...{ data, handleChange, save, changeForm }} />\r\n\t\t\t\t\t\t\t\t</Card>,\r\n\t\t\t\t\t\t\t\tdisabled: !data._id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Spin>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\n\r\nconst EnForm = ({ data, handleChange, changeForm }) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form layout=\"vertical\" disabled={!changeForm}>\r\n\t\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Form.Item label=\"Type\" required>\r\n\t\t\t\t\t\t\t<Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"aboutus\">About us</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"termcondition\">Terms & Condition</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"faq\">Faq</Select.Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t<Form.Item label=\"Data\" required>\r\n\t\t\t\t\t\t\t<Input.TextArea rows={8} cols={24} placeholder=\"Data\" value={data.data} onChange={e => { handleChange({ data: e.target.value }) }} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst HiForm = ({ data, handleChange, changeForm }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form layout=\"vertical\" disabled={!changeForm}>\r\n\t\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Form.Item label=\"Type\" required>\r\n\t\t\t\t\t\t\t<Select value={data.type} disabled>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"aboutus\">About us</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"termcondition\">Terms & Condition</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"faq\">Faq</Select.Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t<Form.Item label=\"Data\" required>\r\n\t\t\t\t\t\t\t<Input.TextArea rows={8} cols={24} placeholder=\"Data\" value={data.data} onChange={e => { handleChange({ data: e.target.value }) }} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst GuForm = ({ data, handleChange, changeForm }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form layout=\"vertical\" disabled={!changeForm}>\r\n\t\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Form.Item label=\"Type\" required>\r\n\t\t\t\t\t\t\t<Select value={data.type} disabled>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"aboutus\">About us</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"termcondition\">Terms & Condition</Select.Option>\r\n\t\t\t\t\t\t\t\t<Select.Option value=\"faq\">Faq</Select.Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t<Form.Item label=\"Data\" required>\r\n\t\t\t\t\t\t\t<Input.TextArea rows={8} cols={24} placeholder=\"Data\" value={data.data} onChange={e => { handleChange({ data: e.target.value }) }} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { AppstoreOutlined, DashboardOutlined, UserOutlined, BorderOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\nimport commonObj from '../../commonObj';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Module from '../pages/Module';\r\nimport Profile from '../pages/user/Profile';\r\nimport ChangePassword from '../pages/user/ChangePassword';\r\nimport SubAdmin from '../pages/SubAdmin';\r\nimport Bhagwan from '../pages/Bhagwan';\r\nimport Jinalaya from '../pages/temple/Jinalaya';\r\nimport Shala from '../pages/temple/Shala';\r\nimport State from '../pages/location/State';\r\nimport District from '../pages/location/District';\r\nimport City from '../pages/location/City';\r\nimport Kalyanak from '../pages/temple/Kalyanak';\r\nimport Event from '../pages/Event';\r\nimport Job from '../pages/jobPortal/Job';\r\nimport JobSeeker from '../pages/jobPortal/JobSeeker';\r\nimport User from '../pages/User';\r\n\r\nimport EcommCategory from \"../pages/ecomm/Category\"\r\nimport EcommSubCategory from \"../pages/ecomm/SubCategory\"\r\nimport EcommAttribute from \"../pages/ecomm/Attribute\"\r\nimport EcommProduct from \"../pages/ecomm/Products\"\r\nimport Banner from \"../pages/Banner\"\r\nimport EcommOrder from \"../pages/ecomm/Order\"\r\nimport JainWorldImage from '../pages/jainWorld/Image';\r\nimport JainWorldVideo from '../pages/jainWorld/Video';\r\nimport SingerType from '../pages/music/SingerType';\r\nimport Singer from '../pages/music/Singer';\r\nimport SongCategory from '../pages/music/SongCategory';\r\nimport Song from '../pages/music/Song';\r\nimport Parshwanath108 from '../pages/temple/Parshwanath108';\r\nimport Setting from \"../pages/Setting\"\r\nconst { userType } = commonObj;\r\n\r\n\r\nconst routes = [\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard, hidden: userType !== 'superAdmin' },\r\n    { title: 'Modules', icon: AppstoreOutlined, url: '/modules', component: Module, hidden: userType !== 'superAdmin' },\r\n    { title: 'Sub Admins', icon: AppstoreOutlined, url: '/sub-admins', component: SubAdmin, hidden: userType !== 'superAdmin' },\r\n    { title: 'Users', icon: AppstoreOutlined, url: '/users', component: User, hidden: userType !== 'superAdmin' },\r\n    { title: 'Bhagwan', icon: AppstoreOutlined, url: '/bhagwans', component: Bhagwan, hidden: userType !== 'superAdmin' },\r\n    { title: 'Banners', icon: ApartmentOutlined, url: '/banner', component: Banner },\r\n\r\n    {\r\n        title: 'Location', icon: BankOutlined, url: '/location', children: [\r\n            { title: 'State', icon: ApartmentOutlined, url: '/', component: State },\r\n            { title: 'District', icon: ApartmentOutlined, url: '/district', component: District },\r\n            { title: 'City', icon: ApartmentOutlined, url: '/city', component: City },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Temples', icon: BankOutlined, url: '/temples', children: [\r\n            { title: 'Jinalaya', icon: ApartmentOutlined, url: '/', component: Jinalaya },\r\n            { title: 'Bhojan Shala', icon: ApartmentOutlined, url: '/bhojan-shala', component: () => <Shala type=\"bhojanShala\" /> },\r\n            { title: 'Dharm Shala', icon: ApartmentOutlined, url: '/dharm-shala', component: () => <Shala type=\"dharmShala\" /> },\r\n            { title: 'Path Shala', icon: ApartmentOutlined, url: '/path-shala', component: () => <Shala type=\"pathShala\" /> },\r\n            { title: 'Ayambi Shala', icon: ApartmentOutlined, url: '/ayambi-shala', component: () => <Shala type=\"ayambiShala\" /> },\r\n            { title: 'Kalyanak', icon: ApartmentOutlined, url: '/kalyanak', component: Kalyanak },\r\n            { title: '108 Parshwanath', icon: ApartmentOutlined, url: '/parshwanath', component: Parshwanath108 },\r\n        ]\r\n    },\r\n    { title: 'Event', icon: CalendarOutlined, url: '/events', component: Event },\r\n    { title: 'Settings', icon: CalendarOutlined, url: '/Setting', component: Setting },\r\n    {\r\n        title: 'Job Portal', icon: BankOutlined, url: '/job-portal', children: [\r\n            { title: 'Job', icon: ApartmentOutlined, url: '/', component: Job },\r\n            { title: 'Job Seeker', icon: ApartmentOutlined, url: '/job-seekrs', component: JobSeeker },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Ecomm', icon: BankOutlined, url: '/ecomm', children: [\r\n            { title: 'Category', icon: ApartmentOutlined, url: '/category', component: EcommCategory },\r\n            { title: 'Sub Category', icon: ApartmentOutlined, url: '/sub-category', component: EcommSubCategory },\r\n            { title: 'Attributes', icon: ApartmentOutlined, url: '/attribute', component: EcommAttribute },\r\n            { title: 'Products', icon: ApartmentOutlined, url: '/products', component: EcommProduct },\r\n            { title: 'Orders', icon: ApartmentOutlined, url: '/order', component: EcommOrder },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Music', icon: BankOutlined, url: '/music', children: [\r\n            { title: 'Singer Type', icon: ApartmentOutlined, url: '/singer-type', component: SingerType },\r\n            { title: 'Singer', icon: ApartmentOutlined, url: '/singer', component: Singer },\r\n            { title: 'Song Category', icon: ApartmentOutlined, url: '/song-category', component: SongCategory },\r\n            { title: 'Song', icon: ApartmentOutlined, url: '/song', component: Song },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Jain World', icon: BankOutlined, url: '/jain-world', children: [\r\n            { title: 'Image', icon: ApartmentOutlined, url: '/image', component: JainWorldImage },\r\n            { title: 'Video', icon: ApartmentOutlined, url: '/video', component: JainWorldVideo },\r\n        ]\r\n    },\r\n\r\n    {\r\n        title: 'Profile', icon: UserOutlined, url: '/profile', children: [\r\n            { title: 'Your Profile', icon: UserOutlined, url: '/', component: Profile },\r\n            { title: 'Change Password', icon: BorderOutlined, url: '/change-password', component: ChangePassword },\r\n        ]\r\n    },\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, PageHeader, Typography, Divider, Switch } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/user';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader\r\n                    title={greetingTime(new Date()) + ', ' + data?.name}\r\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, PageHeader, Divider, Input, Button } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\n\r\nimport React, { useState } from 'react';\r\nimport service from '../../../services/user';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({name: commonObj.name});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function save() {\r\n        setLoading(true);\r\n        service.updatePassword(data).then(res => {\r\n            AntdMsg(res.message);\r\n            setData({});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Current Password\">\r\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"New Password\">\r\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Confirm New Password\">\r\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item>\r\n                                {\r\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\r\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\r\n                                        : null\r\n                                }\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"inline\"\r\n                    // theme=\"dark\"\r\n                    items={items}\r\n                    style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Breadcrumb } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport routes from \"./route\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        }\r\n        newRoutes.push({ title: v.title, url: prevBaseUrl + v.url })\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\nexport default function MyBreadcrumb() {\r\n    const location = useLocation().pathname;\r\n    const [breads, setBreads] = useState([]);\r\n    useEffect(() => {\r\n        const paths = [];\r\n        location.split('/')?.reduce((prev, cur) => {\r\n            paths.push(prev + '/' + cur);\r\n            return prev + '/' + cur;\r\n        });\r\n        setBreads(newRoutes.filter(v => paths.includes(v.url)).reverse());\r\n    }, [location]);\r\n\r\n    return (\r\n        <Breadcrumb separator=\"\">\r\n            {\r\n                breads?.map((v, i) => {\r\n                    if (i === breads.length - 1) {\r\n                        return <Breadcrumb.Item key={v.url}>{v.title}</Breadcrumb.Item>\r\n                    } else {\r\n                        return <React.Fragment key={v.url}>\r\n                            <Breadcrumb.Item><Link to={v.url + '/'}>{v.title}</Link></Breadcrumb.Item>\r\n                            <Breadcrumb.Separator>/</Breadcrumb.Separator>\r\n                        </React.Fragment>\r\n                    }\r\n                })\r\n            }\r\n        </Breadcrumb>\r\n    )\r\n};\r\n","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import { Avatar, Layout, Menu, Image } from \"antd\";\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport commonObj from \"../../commonObj\";\r\n\r\n\r\n\r\n\r\nexport default function Top() {\r\n\r\n    const items = [\r\n        {\r\n            label: commonObj?.name ? commonObj.name : 'You',\r\n            icon: <Avatar shape=\"circle\" size={32}\r\n                src={\r\n                    commonObj?.avatar?.url\r\n                        ?\r\n                        <Image\r\n                            src={commonObj?.avatar.url}\r\n                            style={{\r\n                                width: 32,\r\n                            }}\r\n                            preview={false}\r\n                        />\r\n                        : null\r\n                }\r\n                icon={!commonObj?.avatar?.url ? <UserOutlined /> : null}\r\n            />,\r\n            key: 'profile',\r\n        },\r\n        {\r\n            label: 'Logout',\r\n            icon: <LogoutOutlined />,\r\n            key: 'logout',\r\n            style: { color: 'red' },\r\n            onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                <Menu mode=\"horizontal\" items={items} style={{ lineHeight: '46px' }} />\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport Top from \"./Top\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes\r\n                <Layout className=\"site-layout\">\r\n                    <Top />\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 16px 0 240px',\r\n                            overflow: 'initial',\r\n                            marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        <Breadcrumb />\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","Search","addModalRef","selected","deleteData","list","onSubmitCapture","className","gutter","span","marginBottom","placeholder","value","key","e","target","allowClear","type","htmlType","float","icon","PlusOutlined","onClick","openForm","length","title","onConfirm","okText","cancelText","danger","DeleteOutlined","AddForm","forwardRef","ref","useState","ajxRequesting","setAjxRequesting","open","setOpen","setData","useImperativeHandle","dt","status","handleChange","v","k","save","then","res","AntdMsg","message","catch","err","Object","keys","finally","useEffect","_id","util","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","width","footer","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","code","url","config","UploadImage","fileList","setFileList","count","cropImage","listType","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","name","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","addNewModalRef","modules","userName","password","phone","email","query","addAccess","commonObj","includes","editAccess","deleteAccess","Kalyanak","bhagwanId","jinalayaId","loading","setLoading","setSelected","isPopulate","useRef","columns","dataIndex","render","bhagwanDetails","hidden","row","size","EditOutlined","EyeOutlined","filter","item","map","extra","tableColumns","ellipsis","fixed","tableProps","bordered","showHeader","rowSelection","selectedRowKeys","tableLayout","undefined","level","pagination","position","dataSource","scroll","y","x","jinalayas","setJinalayas","bhagwan","setBhagwan","jinalayaService","isAll","ln","bhagwanService","setLn","changeForm","setChangeForm","entries","forEach","ent","varDt","split","i","parseInt","parentId","imgUrls","activeKey","items","children","borderTop","EnForm","HiForm","GuForm","tithi","jaap","birth","bc","destroyInactiveTabPane","moment","format","ad","KalyanakModal","Shala","jinalayaModelRef","isActive","color","JinalayaModel","showSearch","timing","contactDetails","parkingFacilities","available","remarks","distanceFrom","restRoomFacility","bathroom","toilet","locker","foundation","dharmShalaExt","acRoom","nonAcRoom","acHall","nonAcHall","totalFloor","liftFacilities","pathShalaExt","totalStudents","ayambiShalaExt","facilities","orientation","plain","labharthi","prachinta","address","rows","location","coordinates","number","MinusOutlined","vv","ii","height","optionType","buttonStyle","custom","morning","afternoon","evening","allDay","checked","mode","upashray","historyDetails","Jinalaya","lat","setLat","lng","setLng","isLoaded","useJsApiLoader","googleMapsApiKey","process","paddingBottom","center","zoom","mapContainerStyle","latLng","handlePos","shalaModalRef","kalyanakModalRef","ShalaModal","states","setStates","districts","setDistricts","locationService","stateId","districtId","cities","setCities","googleMapModalRef","GoogleModal","pratisthacharya","dhwajaLabharthi","isParshvanath","is24TirthankarJinalaya","cityId","pincode","City","rowData","setRowData","getDetails","District","cityModalRef","CityModal","DistrictModal","startDate","endDate","description","companyName","ageLimit","openingCount","experience","requiredGender","staying","food","contacts","parentName","age","gender","forOtherState","forOtherDistrict","forOtherCity","UserProfileModal","userId","orderData","setOrderData","cartData","setCartData","_","productDetails","columnOrder","orderTableColoumns","cartTableProps","orderTableProps","src","alt","avatar","firstName","lastName","SubCategory","categoryId","categories","setCategories","setFile","imgUrl","slug","SubCategoryModal","Products","productId","attributeDetails","attributes","setAttributes","attributeId","thumbFile","setThumbFile","thumbImgUrl","subCategories","setSubCategories","filterdData","categoryIds","subCategoryIds","optionLabelProp","price","actualPrice","hsn_code","inventory","metaTitle","metaTag","metaDescription","AttributeModal","fileType","priority","OrderDetails","orderId","ProductDetails","quantity","shippingAddress","paymentMethod","totalAmount","users","fileUrl","UploadOutlined","SingerFile","singerId","controls","dataValue","setDataValue","margin","console","log","Date","Photo","Video","YoutubeShorts","YoutubeVideo","singerType","setSingerType","singerTypeId","contactNos","singerTypeIds","SingerFileModal","setFileType","UploadAudio","onPreview","fetch","method","json","thumbnail","singers","setSingers","songUrl","serviceBhagwan","singerIds","lyrics","fileListAudio","setFileListAudio","stuti","stutiFile","cols","userType","DashboardOutlined","component","Dashboard","AppstoreOutlined","textTransform","userProfileModalRef","ApartmentOutlined","BankOutlined","districtModalRef","expandable","CalendarOutlined","subCategoryModalRef","EcommSubCategory","attributeModalRef","singerFileDataModalRef","setUsers","userService","UserOutlined","doSave","setDoSave","result","greetingTime","checkedChildren","unCheckedChildren","strong","editable","editing","triggerType","BorderOutlined","currentPassword","newPassword","confirmNewPassword","routes","convertMultiToSingle","arr","prevBaseUrl","to","paths","useLocation","pathname","reduce","prev","cur","push","defaultSelectedKeys","pop","defaultOpenKeys","newRoutes","MyBreadcrumb","breads","setBreads","reverse","separator","Error404","subTitle","Top","preview","LogoutOutlined","window","localStorage","clear","reload","padding","lineHeight","MyLayout","collapsed","setCollapsed","minHeight","collapsible","onCollapse","overflow","left","bottom","maxWidth","Menu","marginLeft","path","element"],"sourceRoot":""}